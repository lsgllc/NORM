package com.txdot.isd.rts.services.data;import java.io.Serializable;import java.lang.reflect.Field;import java.util.Map;import com.txdot.isd.rts.services.util.Displayable;import com.txdot.isd.rts.services.util.RTSDate;import com.txdot.isd.rts.services.util.UtilityMethods;import com.txdot.isd.rts.services.util.constants.InventoryConstant;/* * * InventoryAllocationData.java * * (c) Texas Department of Transportation 2001 *  * --------------------------------------------------------------------- * Change History: * Name			Date		Description * ------------	-----------	-------------------------------------------- * K Harrell	11/14/2001  Added ciEndPatrnSeqNo * K Harrell	01/15/2002  Added NewSubstaId * Min Wang		07/07/2003  Added CalcInv boolean so processInvData  * 							can see. *                          defect 6076 * K Harrell	04/13/2005	Java 1.4 Work *							defect 7899 Ver 5.2.3  * Min Wang		05/13/2005  use an "is" getter when type of data  * 							is boolean. * 							add isCalcInv() * 							delete getCalcInv() * 							defect 6370 Ver 5.2.3 * Ray Rowehl	02/12/2007	Add booleans for handling Virtual Inventory * 							needs. * 							add caInvHoldTimeStmp, cbItrntReq, cbISA,  * 								cbPersonalized, cbVirtual, ciInvcDate,  * 								ciTransAmDate, ciTransTime, ciTransWsId,  * 								csInvNo, csMfgPltNo, csTransEmpId * 							add getInvcDate(), getInvcNo(),  * 								getInvHoldTimeStmp(), getMfgPltNo(),  * 								getTransAmDate(), getTransEmpId(),  * 								getTransTime(), getTransWsId(),   * 								isCalcInv(), isInetReq(), isPersonalized(),  * 								isVirtual(), setInetReq(), setInvcDate(),  * 								setInvcNo(), setInvHoldTimeStmp(),  * 								setISA(), setMfgPltNo(),  * 								setPersonalized(), setTransAmDate(),  * 								setTransEmpId(), setTransTime(),   * 								setTransWsId(), setVirtual() * 							defect 9116 Ver Special Plates * Ray Rowehl	02/13/2007	Move RangeCd to InventoryAllocationData  * 							as part of creating Virtual Inventory. * 							add csRangeCd * 							add getRangeCd(), setRangeCd() * 							defect 9116 Ver Special Plates * Ray Rowehl	02/20/2007	Move Already Issued boolean. * 							add cbAlreadyIssued, cbProcessInvData,  * 								ciErrorCode, csViItmCd * 							add getErrorCode(), getRequestorIpAddress(), * 								getRequestorRegPltNo(), getViItmCd(),  * 								isAlreadyIssued(), setAlreadyIssued(),  * 								setErrorCode(), setProcessInvData(),  * 								setRequestorIpAddress(),  * 								setRequestorRegPltNo(), setViItmCd(),  * 								wasProcessInvData() * 							defect 9116 Ver Special Plates * Ray Rowehl	05/23/2007	Add indicator that determines if the plate * 							number was provided by the customer or  * 							generated from the system. * 							This field is controlled by the Inventory  * 							module. * 							add cbCustSupplied * 							defect 9116 Ver Special Plates * K Harrell	06/18/2007	add ciCacheTransTime,ciCacheTransAMDATE,  * 							get/set methods.  * 							defect 9085 Ver Special Plates  * Ray Rowehl	06/21/2007	Add support for new csHoopsRegPltNo field. * 							This field stores the item number in  * 							Hoops form. * 							add csHoopsRegPltNo * 							add getHoopsRegPltNo(), setHoopsRegPltNo() * 							defect 9116 Ver Special Plates  * Ray Rowehl	06/11/2008	Add temp flag so we can determine if the  * 							request is only temporary or permanent. * 							Used for validatePLP. * 							add cbTempChange * 							defect 9679 Ver MyPlates_POS * Ray Rowehl	06/18/2008	Add fromReserve boolean to detect when  * 							the item is fromReserve. * 							add cbFromReserve * 							add isFromReserve(), setFromReserve() * 							defect 9679 Ver MyPlates_POS  * K Harrell	06/26/2010	add getTransId() * 							defect 10505 Ver 6.5.0  * K Harrell	03/17/2011	add cbVerifyInvOwner, is/set method * 							defect 10769 Ver 6.7.1  * --------------------------------------------------------------------- *//**  * This Data class contains attributes and get set methods for  * InventoryAllocationData  *  * @version	6.7.1 			03/17/2011 * @author	Marx Rajang * <br>Creation Date:		09/12/2001 	 *//* &InventoryAllocationData& */public class InventoryAllocationData	implements Displayable, Serializable{/* &InventoryAllocationData'serialVersionUID& */	private final static long serialVersionUID = -4771798035254976783L;/* &InventoryAllocationData'caInvHoldTimeStmp& */	protected RTSDate caInvHoldTimeStmp;	// boolean /* &InventoryAllocationData'cbAlreadyIssued& */	protected boolean cbAlreadyIssued = false;/* &InventoryAllocationData'cbCalcInv& */	protected boolean cbCalcInv = false;	/**	 * Indicates if the Customer provided the plate number.	 * 	 * <p>If false, this indicates the plate number was generated 	 * by the system.	 * 	 * <p>This value is set by the Inventory module.	 *//* &InventoryAllocationData'cbCustSupplied& */	protected boolean cbCustSupplied = false;	// defect 9679/* &InventoryAllocationData'cbFromReserve& */	protected boolean cbFromReserve = false;	// end defect 9679/* &InventoryAllocationData'cbISA& */	protected boolean cbISA = false;/* &InventoryAllocationData'cbItrntReq& */	protected boolean cbItrntReq = false;	// indicates if the original form was in ProcessInventoryData./* &InventoryAllocationData'cbProcessInvData& */	protected boolean cbProcessInvData = false;		// defect 9679	/**	 * Indicates that there should be no change to state of data.	 * This is only a temporary request.	 *//* &InventoryAllocationData'cbTempChange& */	protected boolean cbTempChange = false;	// end defect 9679/* &InventoryAllocationData'cbUserPltNo& */	protected boolean cbUserPltNo = false;/* &InventoryAllocationData'cbVirtual& */	protected boolean cbVirtual = false;		// defect 10769 /* &InventoryAllocationData'cbVerifyInvOwner& */	protected boolean cbVerifyInvOwner = false;	// end defect 10769  	// int /* &InventoryAllocationData'ciCacheTransAMDate& */	private int ciCacheTransAMDate;/* &InventoryAllocationData'ciCacheTransTime& */	private int ciCacheTransTime;/* &InventoryAllocationData'ciEndPatrnSeqNo& */	protected int ciEndPatrnSeqNo;/* &InventoryAllocationData'ciErrorCode& */	protected int ciErrorCode;/* &InventoryAllocationData'ciInvcDate& */	protected int ciInvcDate;/* &InventoryAllocationData'ciInvItmYr& */	protected int ciInvItmYr;/* &InventoryAllocationData'ciInvQty& */	protected int ciInvQty;/* &InventoryAllocationData'ciInvStatusCd& */	protected int ciInvStatusCd;/* &InventoryAllocationData'ciNewSubstaId& */	protected int ciNewSubstaId;/* &InventoryAllocationData'ciOfcIssuanceNo& */	protected int ciOfcIssuanceNo;/* &InventoryAllocationData'ciPatrnSeqCd& */	protected int ciPatrnSeqCd;/* &InventoryAllocationData'ciPatrnSeqNo& */	protected int ciPatrnSeqNo;/* &InventoryAllocationData'ciSubstaId& */	protected int ciSubstaId;/* &InventoryAllocationData'ciTransAmDate& */	protected int ciTransAmDate;/* &InventoryAllocationData'ciTransTime& */	protected int ciTransTime;/* &InventoryAllocationData'ciTransWsId& */	protected int ciTransWsId;/* &InventoryAllocationData'csHoopsRegPltNo& */	protected String csHoopsRegPltNo;	// String /* &InventoryAllocationData'csInvcNo& */	protected String csInvcNo;/* &InventoryAllocationData'csInvId& */	protected String csInvId;/* &InventoryAllocationData'csInvItmEndNo& */	protected String csInvItmEndNo;/* &InventoryAllocationData'csInvItmNo& */	protected String csInvItmNo;/* &InventoryAllocationData'csInvLocIdCd& */	protected String csInvLocIdCd;/* &InventoryAllocationData'csItmCd& */	protected String csItmCd;/* &InventoryAllocationData'csMfgPltNo& */	protected String csMfgPltNo;/* &InventoryAllocationData'csRangeCd& */	protected String csRangeCd;/* &InventoryAllocationData'csRequestorIpAddress& */	protected String csRequestorIpAddress;/* &InventoryAllocationData'csRequestorRegPltNo& */	protected String csRequestorRegPltNo;/* &InventoryAllocationData'csTransEmpId& */	protected String csTransEmpId;/* &InventoryAllocationData'csViItmCd& */	protected String csViItmCd;	/**	 * Get Object field attributes	 * 	 * @return Map	 *//* &InventoryAllocationData.getAttributes& */	public Map getAttributes()	{		java.util.HashMap lhmHash = new java.util.HashMap();		Field[] larrFields = this.getClass().getDeclaredFields();		for (int i = 0; i < larrFields.length; i++)		{			try			{				lhmHash.put(					larrFields[i].getName(),					larrFields[i].get(this));			}			catch (IllegalAccessException leIllAccEx)			{				continue;			}		}		return lhmHash;	}	/**	 * Return value of ciCacheTransAMDate	 * 	 * @return int	 *//* &InventoryAllocationData.getCacheTransAMDate& */	public int getCacheTransAMDate()	{		return ciCacheTransAMDate;	}	/**	 * Set value of CacheTransTime	 * 	 * @return int	 *//* &InventoryAllocationData.getCacheTransTime& */	public int getCacheTransTime()	{		return ciCacheTransTime;	}	/**	 * Returns the value of EndPatrnSeqNo	 * 	 * @return  int 	 *//* &InventoryAllocationData.getEndPatrnSeqNo& */	public final int getEndPatrnSeqNo()	{		return ciEndPatrnSeqNo;	}	/**	 * Return the error code.	 * 	 * @return int	 *//* &InventoryAllocationData.getErrorCode& */	public final int getErrorCode()	{		return ciErrorCode;	}	/**	 * Returns the Hoops Reg Plate Number form of the Item.	 * 	 * @return String	 *//* &InventoryAllocationData.getHoopsRegPltNo& */	public final String getHoopsRegPltNo()	{		return csHoopsRegPltNo;	}	/**	 * Returns the date of the Invoice used to receive this item.	 * 	 * @return int	 *//* &InventoryAllocationData.getInvcDate& */	public final int getInvcDate()	{		return ciInvcDate;	}	/**	 * Returns the Invoice Number used to add this item.	 * 	 * @return String InvcNo	 *//* &InventoryAllocationData.getInvcNo& */	public final String getInvcNo()	{		return csInvcNo;	}	/**	 * Return the Hold TimeStamp.  This is used for timing out the hold.	 * 	 * @return RTSDate	 *//* &InventoryAllocationData.getInvHoldTimeStmp& */	public final RTSDate getInvHoldTimeStmp()	{		return caInvHoldTimeStmp;	}	/**	 * Returns the value of InvId	 * 	 * @return  String 	 *//* &InventoryAllocationData.getInvId& */	public final String getInvId()	{		return csInvId;	}	/**	 * Returns the value of InvItmEndNo	 * 	 * @return  String 	 *//* &InventoryAllocationData.getInvItmEndNo& */	public final String getInvItmEndNo()	{		return csInvItmEndNo;	}	/**	 * Returns the value of InvItmNo	 * 	 * @return  String 	 *//* &InventoryAllocationData.getInvItmNo& */	public final String getInvItmNo()	{		return csInvItmNo;	}	/**	 * Returns the value of InvItmYr	 * 	 * @return  int 	 *//* &InventoryAllocationData.getInvItmYr& */	public final int getInvItmYr()	{		return ciInvItmYr;	}	/**	 * Returns the value of InvLocIdCd	 * 	 * @return  String 	 *//* &InventoryAllocationData.getInvLocIdCd& */	public final String getInvLocIdCd()	{		return csInvLocIdCd;	}	/**	 * Returns the value of InvQty	 * 	 * @return  int 	 *//* &InventoryAllocationData.getInvQty& */	public final int getInvQty()	{		return ciInvQty;	}	/**	 * Returns the value of InvStatusCd	 * 	 * @return  int 	 *//* &InventoryAllocationData.getInvStatusCd& */	public final int getInvStatusCd()	{		return ciInvStatusCd;	}	/**	 * Returns the value of ItmCd	 * 	 * @return  String 	 *//* &InventoryAllocationData.getItmCd& */	public final String getItmCd()	{		return csItmCd;	}	/**	 * Returns the Manufacturing Plate Number.	 * 	 * <p>This only means something if it is personalized.	 * 	 * @return String	 *//* &InventoryAllocationData.getMfgPltNo& */	public final String getMfgPltNo()	{		return csMfgPltNo;	}	/**	 * Returns the value of NewSubstaId	 * 	 * @return int	 *//* &InventoryAllocationData.getNewSubstaId& */	public final int getNewSubstaId()	{		return ciNewSubstaId;	}	/**	 * Returns the value of OfcIssuanceNo	 * 	 * @return  int 	 *//* &InventoryAllocationData.getOfcIssuanceNo& */	public final int getOfcIssuanceNo()	{		return ciOfcIssuanceNo;	}	/**	 * Returns the value of PatrnSeqCd	 * 	 * @return  int 	 *//* &InventoryAllocationData.getPatrnSeqCd& */	public final int getPatrnSeqCd()	{		return ciPatrnSeqCd;	}	/**	 * Returns the value of PatrnSeqNo	 * 	 * @return  int 	 *//* &InventoryAllocationData.getPatrnSeqNo& */	public final int getPatrnSeqNo()	{		return ciPatrnSeqNo;	}	/**	 * Returns the value of RangeCd	 * 	 * @return  String	 *//* &InventoryAllocationData.getRangeCd& */	public final String getRangeCd()	{		return csRangeCd;	}	/**	 * Return the Requestors tcp/ip address.	 * This is mainly for Internet requests.	 * POS can also populate this field with control point.	 * 	 * @return String	 *//* &InventoryAllocationData.getRequestorIpAddress& */	public final String getRequestorIpAddress()	{		return csRequestorIpAddress;	}	/**	 * Get the Requestor's RegPltNo.	 * Used for Special Plate Applications.	 * 	 * @return String	 *//* &InventoryAllocationData.getRequestorRegPltNo& */	public final String getRequestorRegPltNo()	{		return csRequestorRegPltNo;	}	/**	 * Returns the value of SubstaId	 * 	 * @return  int 	 *//* &InventoryAllocationData.getSubstaId& */	public final int getSubstaId()	{		return ciSubstaId;	}	/**	 * Returns the TransAmDate of when this row was updated.	 * 	 * @return int	 *//* &InventoryAllocationData.getTransAmDate& */	public final int getTransAmDate()	{		return ciTransAmDate;	}	/**	 * Returns the Transaction Employee Id last updating the record.	 * 	 * @return String 	 *//* &InventoryAllocationData.getTransEmpId& */	public final String getTransEmpId()	{		return csTransEmpId;	}	/**	* Returns the value of TransId	* 	* @return String 	*//* &InventoryAllocationData.getTransId& */	public String getTransId()	{		String lsTransId = new String();		if (ciTransTime != 0			&& ((!isItrntReq()				&& ciInvStatusCd != InventoryConstant.HOLD_INV_NOT)				|| (isItrntReq()					&& ciInvStatusCd						== InventoryConstant.HOLD_INV_ORDER_COMPLETE)))		{			lsTransId =				UtilityMethods.getTransId(					ciOfcIssuanceNo,					ciTransWsId,					ciTransAmDate,					ciTransTime);		}		return lsTransId;	}	/**	 * Return the Transaction Time from the Order Confirmation.	 * 	 * @return int	 *//* &InventoryAllocationData.getTransTime& */	public final int getTransTime()	{		return ciTransTime;	}	/**	 * Returns the Transaction Workstion Id last working with this row.	 * 	 * @return int	 *//* &InventoryAllocationData.getTransWsId& */	public final int getTransWsId()	{		return ciTransWsId;	}	/**	 * Return the VI Item Code.	 * 	 * @return String	 *//* &InventoryAllocationData.getViItmCd& */	public final String getViItmCd()	{		return csViItmCd;	}	/**	 * Returns the value of AlreadyIssued	 * 	 * @return boolean	 *//* &InventoryAllocationData.isAlreadyIssued& */	public final boolean isAlreadyIssued()	{		return cbAlreadyIssued;	}	/**	 * Returns value of CalcInv boolean.	 * 	 * @return boolean	 *//* &InventoryAllocationData.isCalcInv& */	public final boolean isCalcInv()	{		return cbCalcInv;	}	/**	 * Indicates if the Plate Number is provided by the Customer.	 * 	 * @return boolean	 *//* &InventoryAllocationData.isCustSupplied& */	public final boolean isCustSupplied()	{		return cbCustSupplied;	}	/**	 * Indicates if source will be Reserve.	 * 	 * @return boolean	 *//* &InventoryAllocationData.isFromReserve& */	public boolean isFromReserve()	{		return cbFromReserve;	}	/**	 * Boolean indicating if this item has an ISA.	 * 	 * @return boolean	 *//* &InventoryAllocationData.isISA& */	public final boolean isISA()	{		return cbISA;	}	/**	 * Returns boolean indicating that the transaction was done outside	 * of POS.	 * 	 * @return boolean	 *//* &InventoryAllocationData.isItrntReq& */	public final boolean isItrntReq()	{		return cbItrntReq;	}	/**	 * Returns indication if the change is Temporary or Permanent.	 * 	 * @return boolean	 *//* &InventoryAllocationData.isTempChange& */	public boolean isTempChange()	{		return cbTempChange;	}	/**	 * Boolean that indicates if this is Personalized.	 * 	 * @return boolean	 *//* &InventoryAllocationData.isUserPltNo& */	public final boolean isUserPltNo()	{		return cbUserPltNo;	}		/**	 * Return value of cbVerifyInvOwner	 * 	 * @return boolean 	 *//* &InventoryAllocationData.isVerifyInvOwner& */	public boolean isVerifyInvOwner()	{		return cbVerifyInvOwner;	}	/**	 * Boolean that indicates this is a Virtual Item.	 * 	 * @return boolean	 *//* &InventoryAllocationData.isVirtual& */	public final boolean isVirtual()	{		return cbVirtual;	}	/**	 * Set the value of AlreadyIssued	 *  	 * @param abAlreadyIssued boolean	 *//* &InventoryAllocationData.setAlreadyIssued& */	public final void setAlreadyIssued(boolean abAlreadyIssued)	{		cbAlreadyIssued = abAlreadyIssued;	}	/**	 * Set value of CacheTransAMDate	 * 	 * @param aiCacheTransAMDate	 *//* &InventoryAllocationData.setCacheTransAMDate& */	public void setCacheTransAMDate(int aiCacheTransAMDate)	{		ciCacheTransAMDate = aiCacheTransAMDate;	}	/**	 * Set value of CacheTransTime	 * 	 * @param aiCacheTransTime	 *//* &InventoryAllocationData.setCacheTransTime& */	public void setCacheTransTime(int aiCacheTransTime)	{		ciCacheTransTime = aiCacheTransTime;	}	/**	 * Sets the value of CalcInv	 * 	 * @param abCalcInv int	 *//* &InventoryAllocationData.setCalcInv& */	public final void setCalcInv(boolean abCalcInv)	{		cbCalcInv = abCalcInv;	}	/**	 * Set the Customer Supplied Indicator.	 * 	 * @param abCustSupplied boolean	 *//* &InventoryAllocationData.setCustSupplied& */	public final void setCustSupplied(boolean abCustSupplied)	{		cbCustSupplied = abCustSupplied;	}	/**	* This method sets the value of EndPatrnSeqNo.	* 	* @param aiEndPatrnSeqNo   int 	*//* &InventoryAllocationData.setEndPatrnSeqNo& */	public final void setEndPatrnSeqNo(int aiEndPatrnSeqNo)	{		ciEndPatrnSeqNo = aiEndPatrnSeqNo;	}	/**	 * Set the Error Code	 * 	 * @param aiNewErrorCode int	 *//* &InventoryAllocationData.setErrorCode& */	public final void setErrorCode(int aiNewErrorCode)	{		ciErrorCode = aiNewErrorCode;	}	/**	 * Sets the Indicator that the source will be Reserve.	 * 	 * @param abFromReserve	 *//* &InventoryAllocationData.setFromReserve& */	public void setFromReserve(boolean abFromReserve)	{		cbFromReserve = abFromReserve;	}	/**	 * Sets the Hoops Reg Plate Number form of the Item.	 * 	 * @param asHoopsRegPltNo String	 *//* &InventoryAllocationData.setHoopsRegPltNo& */	public final void setHoopsRegPltNo(String asHoopsRegPltNo)	{		csHoopsRegPltNo = asHoopsRegPltNo;	}	/**	 * Set the Invoice Date for this item.	 * 	 * @param int aiNewInvcDate	 *//* &InventoryAllocationData.setInvcDate& */	public final void setInvcDate(int aiNewInvcDate)	{		ciInvcDate = aiNewInvcDate;	}	/**	 * Set the Invoice Number used for this item.	 * 	 * @param String	 *//* &InventoryAllocationData.setInvcNo& */	public final void setInvcNo(String asNewInvcNo)	{		csInvcNo = asNewInvcNo;	}	/**	 * Set the Inventory Hold TimeStamp.	 * 	 * @param RTSDate aoInvHoldTimeStmp	 *//* &InventoryAllocationData.setInvHoldTimeStmp& */	public final void setInvHoldTimeStmp(RTSDate aoInvHoldTimeStmp)	{		caInvHoldTimeStmp = aoInvHoldTimeStmp;	}	/**	 * This method sets the value of InvId.	 * 	 * @param asInvId   String 	 *//* &InventoryAllocationData.setInvId& */	public final void setInvId(String asInvId)	{		csInvId = asInvId;	}	/**	 * This method sets the value of InvItmEndNo.	 * 	 * @param asInvItmEndNo   String 	 *//* &InventoryAllocationData.setInvItmEndNo& */	public final void setInvItmEndNo(String asInvItmEndNo)	{		csInvItmEndNo = asInvItmEndNo;	}	/**	 * This method sets the value of InvItmNo.	 * 	 * @param asInvItmNo   String 	 *//* &InventoryAllocationData.setInvItmNo& */	public final void setInvItmNo(String asInvItmNo)	{		csInvItmNo = asInvItmNo;	}	/**	 * This method sets the value of InvItmYr.	 * 	 * @param aiInvItmYr   int 	 *//* &InventoryAllocationData.setInvItmYr& */	public final void setInvItmYr(int aiInvItmYr)	{		ciInvItmYr = aiInvItmYr;	}	/**	 * This method sets the value of InvLocIdCd.	 * 	 * @param asInvLocIdCd   String 	 *//* &InventoryAllocationData.setInvLocIdCd& */	public final void setInvLocIdCd(String asInvLocIdCd)	{		csInvLocIdCd = asInvLocIdCd;	}	/**	 * This method sets the value of InvQty.	 * 	 * @param aiInvQty   int 	 *//* &InventoryAllocationData.setInvQty& */	public final void setInvQty(int aiInvQty)	{		ciInvQty = aiInvQty;	}	/**	 * This method sets the value of InvStatusCd.	 * 	 * @param aiInvStatusCd   int 	 *//* &InventoryAllocationData.setInvStatusCd& */	public final void setInvStatusCd(int aiInvStatusCd)	{		ciInvStatusCd = aiInvStatusCd;	}	/**	 * Set the ISA boolean.	 * 	 * @param boolean abNewISA	 *//* &InventoryAllocationData.setISA& */	public final void setISA(boolean abNewISA)	{		cbISA = abNewISA;	}	/**	 * This method sets the value of Item Code.	 * 	 * @param asItmCd   String 	 *//* &InventoryAllocationData.setItmCd& */	public final void setItmCd(String asItmCd)	{		csItmCd = asItmCd;	}	/**	 * Sets the Inet Request Indicator.	 * 	 * @param boolean	 *//* &InventoryAllocationData.setItrntReq& */	public final void setItrntReq(boolean abNewInetReq)	{		cbItrntReq = abNewInetReq;	}	/**	 * Set the Manufacturing Plate Number.	 * 	 * @param String asMfgPltNo	 *//* &InventoryAllocationData.setMfgPltNo& */	public final void setMfgPltNo(String asMfgPltNo)	{		csMfgPltNo = asMfgPltNo;	}	/**	 * Sets the value of NewSubstaId	 * 	 * @param aiNewSubstaId int	 *//* &InventoryAllocationData.setNewSubstaId& */	public final void setNewSubstaId(int aiNewSubstaId)	{		ciNewSubstaId = aiNewSubstaId;	}	/**	 * This method sets the value of OfcIssuanceNo.	 * 	 * @param aiOfcIssuanceNo   int 	 *//* &InventoryAllocationData.setOfcIssuanceNo& */	public final void setOfcIssuanceNo(int aiOfcIssuanceNo)	{		ciOfcIssuanceNo = aiOfcIssuanceNo;	}	/**	 * This method sets the value of PatrnSeqCd.	 * 	 * @param aiPatrnSeqCd   int 	 *//* &InventoryAllocationData.setPatrnSeqCd& */	public final void setPatrnSeqCd(int aiPatrnSeqCd)	{		ciPatrnSeqCd = aiPatrnSeqCd;	}	/**	 * This method sets the value of PatrnSeqNo.	 * 	 * @param aiPatrnSeqNo   int 	 *//* &InventoryAllocationData.setPatrnSeqNo& */	public final void setPatrnSeqNo(int aiPatrnSeqNo)	{		ciPatrnSeqNo = aiPatrnSeqNo;	}	/**	 * Set the boolean indicating the original form of this data was	 * ProcessInventoryData.	 * 	 * @param abNewPID boolean	 *//* &InventoryAllocationData.setProcessInvData& */	public final void setProcessInvData(boolean abNewPID)	{		cbProcessInvData = abNewPID;	}	/**	 * This method sets the value of RangeCd	 * @param asRangeCd   String	 *//* &InventoryAllocationData.setRangeCd& */	public final void setRangeCd(String asRangeCd)	{		csRangeCd = asRangeCd;	}	/**	 * Sets the Requestor tcp/ip address.	 * 	 * <p>Note that the storage of this field has a limited length.	 * 	 * @param asNewIpAddress String	 *//* &InventoryAllocationData.setRequestorIpAddress& */	public final void setRequestorIpAddress(String asNewIpAddress)	{		csRequestorIpAddress = asNewIpAddress;	}	/**	 * Set the Requestor's RegPltNo.	 * 	 * @param asNewRegPltNo String	 *//* &InventoryAllocationData.setRequestorRegPltNo& */	public final void setRequestorRegPltNo(String asNewRegPltNo)	{		csRequestorRegPltNo = asNewRegPltNo;	}	/**	 * This method sets the value of SubstaId.	 * 	 * @param aiSubstaId   int 	 *//* &InventoryAllocationData.setSubstaId& */	public final void setSubstaId(int aiSubstaId)	{		ciSubstaId = aiSubstaId;	}	/**	 * Set the Temp Change flag.	 * 	 * @param abTempChange	 *//* &InventoryAllocationData.setTempChange& */	public void setTempChange(boolean abTempChange)	{		cbTempChange = abTempChange;	}	/**	 * Set the TransAmDate.	 * 	 * @param int aiTransAmDate	 *//* &InventoryAllocationData.setTransAmDate& */	public final void setTransAmDate(int aiTransAmDate)	{		ciTransAmDate = aiTransAmDate;	}	/**	 * Set the Transaction Employee Id for last update.	 * 	 * @param String asTransEmpId	 *//* &InventoryAllocationData.setTransEmpId& */	public final void setTransEmpId(String asTransEmpId)	{		csTransEmpId = asTransEmpId;	}	/**	 * Set the Transaction Time for the Order Confirmation.	 * 	 * @param int aiTransTime	 *//* &InventoryAllocationData.setTransTime& */	public final void setTransTime(int aiTransTime)	{		ciTransTime = aiTransTime;	}	/**	 * Sets the Transaction Workstion Id.	 * 	 * @param int aiTransWsId	 *//* &InventoryAllocationData.setTransWsId& */	public final void setTransWsId(int aiTransWsId)	{		ciTransWsId = aiTransWsId;	}	/**	 * Set the User Plate Number boolean	 * 	 * @param boolean abNewUserPltNo	 *//* &InventoryAllocationData.setUserPltNo& */	public final void setUserPltNo(boolean abNewUserPltNo)	{		cbUserPltNo = abNewUserPltNo;	}	/**	 * Set value of cbVerifyInvOwner	 * 	 * @param abVerifyInvOwner	 *//* &InventoryAllocationData.setVerifyInvOwner& */	public void setVerifyInvOwner(boolean abVerifyInvOwner)	{		cbVerifyInvOwner = abVerifyInvOwner;	}	/**	 * Set the VI Item Code.	 * 	 * @param asViItmCd String	 *//* &InventoryAllocationData.setViItmCd& */	public final void setViItmCd(String asViItmCd)	{		csViItmCd = asViItmCd;	}	/**	 * Set the Virtual Inventory boolean.	 * 	 * @param boolean abNewVirtual	 *//* &InventoryAllocationData.setVirtual& */	public final void setVirtual(boolean abNewVirtual)	{		cbVirtual = abNewVirtual;	}	/**	 * Returns boolean indicating that the original form of this 	 * data was ProcessInventoryData.	 * 	 * @return boolean	 *//* &InventoryAllocationData.wasProcessInvData& */	public final boolean wasProcessInvData()	{		return cbProcessInvData;	}}/* #InventoryAllocationData# */