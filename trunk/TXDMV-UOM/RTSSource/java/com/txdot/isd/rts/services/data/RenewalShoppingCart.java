package com.txdot.isd.rts.services.data;import java.io.Serializable;import java.util.Vector;import com.txdot.isd.rts.services.util.RTSDate;import com.txdot.isd.rts.services.webapps.util.UtilityMethods;/* * * RenewalShoppingCart.java * * (c) Texas Department of Transportation 2001 * * --------------------------------------------------------------------- * Change History: * Name				Date			Description * ------------	-----------	-------------------------------------------- * K Harrell	03/21/2004	5.2.0 Merge.  See PCR 34 comments. *							add csCntyNo, cdRenwlPrice  *							and get/set methods * 							add details for method descriptions * 									Ver 5.2.0	 * J Rue		06/08/2004 	Add Barcode Type and Version *							getter/setter for Barcode Utility *							add getVersion(), setVersion *							getType(), setType() *							Defect 7108,  ver 5.2.1 * B Hargrove	07/29/2004 	Add getter/setters for acct codes and *							fees 8 - 15.									 *							add fields (ie: csAcctItmCd8, cfItmPrice8) *							add getters, setters *							defect 7348  Ver 5.2.1 * K Harrell	04/21/2005	Java 1.4 Work *							defect 7899 Ver 5.2.3 * K Harrell	10/10/2005	Moved to services.data * 							defect 7889 Ver 5.2.3  * B Brown		10/18/2011	Add getter/setters for new CompleteRegRenData * 							pymnttimestmp field. * 							defect 10996 Ver 6.9.0 * S Carlin		11/01/2011	Add flag to indicate if shopping cart items need * 							to be validated against the database. * 							defect 10945 Ver 6.9.0 * --------------------------------------------------------------------- *//** * This Data class contains attributes and get set methods for  * RenewalShoppingCart *  *  * @version	6.9.0		11/01/2011 * @author	Administrator * <br>Creation Date:	11/02/2001 17:37:16 *//* &RenewalShoppingCart& */public class RenewalShoppingCart implements Serializable{/* &RenewalShoppingCart'cvItems& */	private Vector cvItems;	// individual convenience fee/* &RenewalShoppingCart'cdUnitConvFee& */	double cdUnitConvFee;/* &RenewalShoppingCart'serialVersionUID& */	private final static long serialVersionUID = 8465561818851217811L;		/**	 * RenewalShoppingCart constructor comment.	 *//* &RenewalShoppingCart.RenewalShoppingCart& */	public RenewalShoppingCart()	{		super();		cvItems = new Vector();	}	/**	 * RenewalShoppingCart constructor comment.	 * 	 * @param aiInitialCapacity int	 *//* &RenewalShoppingCart.RenewalShoppingCart$1& */	public RenewalShoppingCart(int aiInitialCapacity)	{		cvItems = new Vector(aiInitialCapacity);	}	/**	 * RenewalShoppingCart constructor comment.	 * 	 * @param aiInitialCapacity int	 * @param aiCapacityIncrement int	 *//* &RenewalShoppingCart.RenewalShoppingCart$2& */	public RenewalShoppingCart(		int aiInitialCapacity,		int aiCapacityIncrement)	{		cvItems = new Vector(aiInitialCapacity, aiCapacityIncrement);	}	/**	 * 	 * Add to vector of Items 	 * 	 * @param aaObj	 *//* &RenewalShoppingCart.add& */	public void add(Object aaObj)	{		cvItems.add(aaObj);	}	/**	 * 	 * ElementAt 	 * 	 * @param i	 * @return	 *//* &RenewalShoppingCart.elementAt& */	public Object elementAt(int i)	{		return cvItems.elementAt(i);	}	/**	 * 	 * Return the Convenience Fee 	 * 	 * @return	 *//* &RenewalShoppingCart.getConvFeeTotal& */	public double getConvFeeTotal()	{		return cvItems.size() * cdUnitConvFee;	}	/**	 * 	 * Return the Convenience Fee Total 	 * 	 * @return	 *//* &RenewalShoppingCart.getConvFeeTotalNumberString& */	public String getConvFeeTotalNumberString()	{		return UtilityMethods.format1(getConvFeeTotal());	}	/**	 * 	 * Return the Convenience Fee Total - String	 * 	 * @return	 *//* &RenewalShoppingCart.getConvFeeTotalString& */	public String getConvFeeTotalString()	{		return UtilityMethods.format(getConvFeeTotal());	}	/**	 * Calculate the total fees associated with this registration 	 * renewal shopping, excluding convenience fees.	 * C	 * @return double	 *//* &RenewalShoppingCart.getFeesTotal& */	public double getFeesTotal()	{		double subTotalFees = 0;		for (int i = 0; i < cvItems.size(); i++)		{			CompleteRegRenData lCompRegRenData =				(CompleteRegRenData) cvItems.elementAt(i);			subTotalFees += lCompRegRenData.getTotalFees();		}		return subTotalFees;	}	/**	 * 	 * Method description	 * 	 * @return	 *//* &RenewalShoppingCart.getFeesTotalNumberString& */	public String getFeesTotalNumberString()	{		return UtilityMethods.format1(getFeesTotal());	}	/**	 * Insert the method's description here.	 * 	 * @return String	 *//* &RenewalShoppingCart.getFeesTotalString& */	public String getFeesTotalString()	{		return UtilityMethods.format(getFeesTotal());	}	/**	 * Calculate the total fees associated with the registration	 * renewal shopping, including convenience fees.	 *	 * @return double	 *//* &RenewalShoppingCart.getTotal& */	public double getTotal()	{		return getFeesTotal() + getConvFeeTotal();	}/* &RenewalShoppingCart.getTotalNumberString& */	public String getTotalNumberString()	{		return UtilityMethods.format1(getTotal());	}	/**	 * Return String value of Total 	 * 	 * @return String	 *//* &RenewalShoppingCart.getTotalString& */	public String getTotalString()	{		return UtilityMethods.format(getTotal());	}	/**	 * 	 * Method description	 * 	 * @return	 *//* &RenewalShoppingCart.getTraceNo& */	public String getTraceNo()	{		String lsTraceNo = null;		if (cvItems.size() > 0)		{			CompleteRegRenData lCompRegRenData =				(CompleteRegRenData) cvItems.elementAt(0);			lsTraceNo =				lCompRegRenData.getVehUserData().getTraceNumber();		}		return lsTraceNo;	}	/**	 * 	 * Method description	 * 	 * @return	 *//* &RenewalShoppingCart.getUnitConvFee& */	public double getUnitConvFee()	{		return cdUnitConvFee;	}	/**	 * 	 * Method description	 * 	 * @param i	 *//* &RenewalShoppingCart.remove& */	public void remove(int i)	{		cvItems.remove(i);	}	/**	 * 	 * Method description	 * 	 * @param newPymntOrderId	 *//* &RenewalShoppingCart.setPymntOrderId& */	public void setPymntOrderId(String newPymntOrderId)	{		for (int i = 0; i < cvItems.size(); i++)		{			CompleteRegRenData lCompRegRenData =				(CompleteRegRenData) cvItems.elementAt(i);			lCompRegRenData.setPymntOrderId(newPymntOrderId);		}	}	/**	 * 	 * Method description	 * 	 * @param newPymntStatusCd	 *//* &RenewalShoppingCart.setPymntStatusCd& */	public void setPymntStatusCd(int newPymntStatusCd)	{		for (int i = 0; i < cvItems.size(); i++)		{			CompleteRegRenData lCompRegRenData =				(CompleteRegRenData) cvItems.elementAt(i);			lCompRegRenData.setPymntStatusCd(newPymntStatusCd);		}	}	/**	 * Set the trace number 	 *  	 * @param asTraceNo String	 *//* &RenewalShoppingCart.setTraceNo& */	public void setTraceNo(String asTraceNo)	{		for (int i = 0; i < cvItems.size(); ++i)		{			CompleteRegRenData lCompRegRenData =				(CompleteRegRenData) cvItems.elementAt(i);			lCompRegRenData.getVehUserData().setTraceNumber(asTraceNo);		}	}	/**	 * 	 * Method description	 * 	 * @param adUnitConvFee	 *//* &RenewalShoppingCart.setUnitConvFee& */	public void setUnitConvFee(double adUnitConvFee)	{		cdUnitConvFee = adUnitConvFee;	}	/**	 * 	 * Return size of the shoping cart	 * 	 * @return int 	 *//* &RenewalShoppingCart.size& */	public int size()	{		return cvItems.size();	}	/**	 * 	 * Method description	 * 	 * @return	 *//* &RenewalShoppingCart.getPymntDate& */	public String getPymntDate()	{		String lsPymntDate = null;		if (cvItems.size() > 0)		{			CompleteRegRenData lCompRegRenData =				(CompleteRegRenData) cvItems.elementAt(0);			lsPymntDate =				lCompRegRenData.getPymntTimeStmp();		}		return lsPymntDate;	}		/**	 * 	 * Method description	 * 	 * @param newPymntStatusCd	 *//* &RenewalShoppingCart.setPymntDate& */	public void setPymntDate(String asPymntDate)	{		for (int i = 0; i < cvItems.size(); i++)		{			CompleteRegRenData lCompRegRenData =				(CompleteRegRenData) cvItems.elementAt(i);			lCompRegRenData.setPymntTimeStmp(asPymntDate);		}	}	//defect 10945/* &RenewalShoppingCart'cbNeedToCompareFees& */	private boolean cbNeedToCompareFees = false;	/**	 * @return the needToCompareFees	 *//* &RenewalShoppingCart.getNeedToCompareFees& */	public boolean getNeedToCompareFees()	{		return cbNeedToCompareFees;	}	/**	 * @param needToCompareFees the needToCompareFees to set	 *//* &RenewalShoppingCart.setNeedToCompareFees& */	public void setNeedToCompareFees(boolean needToCompareFees)	{		this.cbNeedToCompareFees = needToCompareFees;	}	//end defect 10945}/* #RenewalShoppingCart# */