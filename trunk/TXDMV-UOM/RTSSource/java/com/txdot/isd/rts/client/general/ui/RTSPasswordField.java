package com.txdot.isd.rts.client.general.ui;import javax.swing.text.*;import java.awt.event.*;/*  * RTSPasswordField.java *  * (c) Texas Department of Transportation  2001 * --------------------------------------------------------------------- * Change History: * Name			Date		Description * ------------	-----------	-------------------------------------------- * B Hargrove	08/19/2005	Java 1.4 code changes. Format, * 							Hungarian notation, etc.  * 							defect 7885 Ver 5.2.3  * --------------------------------------------------------------------- *//** * Custom Password field: * <ul><li>ignores all text typed while the Alt button is pressed.   * <li>allows the user to specify the max number of characters allowed. * </ul> *  * @version	5.2.3		08/19/2005 * @author	Nancy Ting * <br>Creation Date:	10/08/2001 10:55:11 *//* &RTSPasswordField& */public class RTSPasswordField	extends javax.swing.JPasswordField	implements java.awt.event.KeyListener{/* &RTSPasswordField'ciMaxLength& */	private int ciMaxLength;/* &RTSPasswordField'caDocument& */	private AbstractDocument caDocument;		/**	 * RTSPasswordField constructor comment.	 *//* &RTSPasswordField.RTSPasswordField& */	public RTSPasswordField()	{		this(Integer.MAX_VALUE);	}	/**	 * RTS Password field	 * 	 * @param aiMaxLength int	 *//* &RTSPasswordField.RTSPasswordField$1& */	public RTSPasswordField(int aiMaxLength)	{		ciMaxLength = aiMaxLength;		createDefaultModel();	}		/**	 * A method to create the RTSInputField's Document.	 * <br>Should not be called explicitly	 * 	 * @return Document	 *//* &RTSPasswordField.createDefaultModel& */	public Document createDefaultModel()	{		caDocument = new DocumentNoAlt(ciMaxLength);		return caDocument;	}		/**	 * Get Max length	 * 	 * @return int	 *//* &RTSPasswordField.getMaxLength& */	public int getMaxLength()	{		return ciMaxLength;	}		/**	 * Invoked when a key has been pressed.	 * 	 * @param KeyEvent aaKE	 *//* &RTSPasswordField.keyPressed& */	public void keyPressed(KeyEvent aaKE)	{		// empty code block	}		/**	 * Invoked when a key has been released.	 * 	 * @param KeyEvent aaKE	 *//* &RTSPasswordField.keyReleased& */	public void keyReleased(KeyEvent aaKE)	{		// empty code block	}		/**	 * Invoked when a key has been typed.	 * This event occurs when a key press is followed by a key release.	 * 	 * @param KeyEvent aaKE	 *//* &RTSPasswordField.keyTyped& */	public void keyTyped(KeyEvent aaKE)	{		// empty code block	}		/**	 * Set Max length	 * 	 * @param aiNewMaxLength int	 *//* &RTSPasswordField.setMaxLength& */	public void setMaxLength(int aiNewMaxLength)	{		ciMaxLength = aiNewMaxLength;		setDocument(createDefaultModel());	}}/* #RTSPasswordField# */