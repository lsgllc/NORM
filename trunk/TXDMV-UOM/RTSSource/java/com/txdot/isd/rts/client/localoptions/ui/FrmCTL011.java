package com.txdot.isd.rts.client.localoptions.ui;import java.awt.Dialog;import java.awt.Frame;import java.awt.Insets;import java.awt.event.ActionEvent;import java.awt.event.ActionListener;import java.awt.event.WindowAdapter;import java.awt.event.WindowEvent;import javax.swing.JLabel;import javax.swing.JPanel;import javax.swing.SwingConstants;import javax.swing.WindowConstants;import com.txdot.isd.rts.client.general.ui.RTSButton;import com.txdot.isd.rts.client.general.ui.RTSDialogBox;import com.txdot.isd.rts.services.exception.RTSException;import com.txdot.isd.rts.services.util.constants.CommonConstant;import com.txdot.isd.rts.services.util.constants.ScreenConstant;/* * * FrmCTL011.java * * (c) Texas Department of Transportation 2001 * --------------------------------------------------------------------- * Change History: * Name			Date		Description * ------------ -----------	-------------------------------------------- * B Arredondo	02/23/2004	Modifiy visual composition to change *							defaultCloseOperation to DO_NOTHING_ON_CLOSE *							defect 6897 Ver 5.1.6 * K Harrell	03/24/2004	JavaDoc Cleanup * 							Ver 5.2.0 * Min Wang		02/16/2005	Make basic RTS 5.2.3 changes. * 							organize imports, format source. * 							modify handleException() *							defect 7891  Ver 5.2.3 * Min Wang		05/06/2005  deprecate class for 5.2.3 change. * 							defect 8197 Ver 5.2.3 * --------------------------------------------------------------------- *//** * Frame for CTL011 Serverplus Confirmation screen * * @version 5.2.3 		05/06/2005 * @author	Ashish Mahajan * <br>Creation date: 	12/17/2001 15:05:02   * @deprecated *//* &FrmCTL011& */public class FrmCTL011 extends RTSDialogBox implements ActionListener{/* &FrmCTL011'CTL011_FRAME_TITLE& */	private static final String CTL011_FRAME_TITLE =		"ServerPlus Confirmation   CTL011";/* &FrmCTL011'CTL011_FRM_NAME& */	private static final String CTL011_FRM_NAME = "FrmCTL011";/* &FrmCTL011'MSG_TO_IMPLEMENT_CHANGE& */	private static final String MSG_TO_IMPLEMENT_CHANGE =		"to implement the change.";/* &FrmCTL011'MSG_RTS_MUST_BE_RESTARTED& */	private static final String MSG_RTS_MUST_BE_RESTARTED =		"RTS must be restarted on all workstations";/* &FrmCTL011'TXT_SERVERPLUS_CHANGED& */	private static final String TXT_SERVERPLUS_CHANGED =		"ServerPlus status has changed!";/* &FrmCTL011'ivjbtnOk& */	private RTSButton ivjbtnOk = null;/* &FrmCTL011'ivjlbl1& */	private JLabel ivjlbl1 = null;/* &FrmCTL011'ivjlbl2& */	private JLabel ivjlbl2 = null;/* &FrmCTL011'ivjlbl3& */	private JLabel ivjlbl3 = null;/* &FrmCTL011'ivjRTSDialogBoxContentPane& */	private JPanel ivjRTSDialogBoxContentPane = null;	/**	 * FrmCTL011 constructor comment.	 *//* &FrmCTL011.FrmCTL011& */	public FrmCTL011()	{		super();		initialize();	}	/**	 * FrmCTL011 constructor comment.	 * 	 * @param aaOwner Dialog	 *//* &FrmCTL011.FrmCTL011$1& */	public FrmCTL011(Dialog aaOwner)	{		super(aaOwner);	}	/**	 * FrmCTL011 constructor comment.	 * 	 * @param aaOwner Dialog	 * @param asTitle String	 *//* &FrmCTL011.FrmCTL011$2& */	public FrmCTL011(Dialog aaOwner, String asTitle)	{		super(aaOwner, asTitle);	}	/**	 * FrmCTL011 constructor comment.	 * 	 * @param aaOwner Dialog	 * @param asTitle String	 * @param abModal boolean	 *//* &FrmCTL011.FrmCTL011$3& */	public FrmCTL011(Dialog aaOwner, String asTitle, boolean abModal)	{		super(aaOwner, asTitle, abModal);	}	/**	 * FrmCTL011 constructor comment.	 * 	 * @param aaOwner Dialog	 * @param abModal boolean	 *//* &FrmCTL011.FrmCTL011$4& */	public FrmCTL011(Dialog aaOwner, boolean abModal)	{		super(aaOwner, abModal);	}	/**	 * FrmCTL011 constructor comment.	 * 	 * @param aaOwner Frame	 *//* &FrmCTL011.FrmCTL011$5& */	public FrmCTL011(Frame aaOwner)	{		super(aaOwner);	}	/**	 * FrmCTL011 constructor comment.	 * 	 * @param aawner Frame	 * @param asTitle String	 *//* &FrmCTL011.FrmCTL011$6& */	public FrmCTL011(Frame aawner, String asTitle)	{		super(aawner, asTitle);	}	/**	 * FrmCTL011 constructor comment.	 * 	 * @param aaOwner Frame	 * @param asTitle String	 * @param abModal boolean	 *//* &FrmCTL011.FrmCTL011$7& */	public FrmCTL011(Frame aaOwner, String asTitle, boolean abModal)	{		super(aaOwner, asTitle, abModal);	}	/**	 * FrmCTL011 constructor comment.	 * 	 * @param aaOwner Frame	 * @param abModal boolean	 *//* &FrmCTL011.FrmCTL011$8& */	public FrmCTL011(Frame aaOwner, boolean abModal)	{		super(aaOwner, abModal);	}	/**	 * Invoked when an action occurs.	 * 	 * @param aaAE ActionEvent	 *//* &FrmCTL011.actionPerformed& */	public void actionPerformed(ActionEvent aaAE)	{		if (aaAE.getSource() == getbtnOk())		{			setVisibleRTS(false);		}	}	/**	 * Return the btnOk property value.	 * 	 * @return RTSButton	 */	/* WARNING: THIS METHOD WILL BE REGENERATED. *//* &FrmCTL011.getbtnOk& */	private RTSButton getbtnOk()	{		if (ivjbtnOk == null)		{			try			{				ivjbtnOk = new RTSButton();				ivjbtnOk.setName("btnOk");				ivjbtnOk.setText(CommonConstant.BTN_TXT_OK);				ivjbtnOk.setBounds(162, 170, 69, 25);				// user code begin {1}				ivjbtnOk.addActionListener(this);				// user code end			}			catch (Throwable leIVJEx)			{				// user code begin {2}				// user code end				handleException(leIVJEx);			}		}		return ivjbtnOk;	}	/**	 * VAJ Builder Data	 * 	 * @deprecated	 */	/* WARNING: THIS METHOD WILL BE REGENERATED. *//* &FrmCTL011.getBuilderData& */	private static void getBuilderData()	{		/*V1.1		**start of data**			D0CB838494G88G88G82D6D7B0GGGGGGGGGGGG8CGGGE2F5E9ECE4E5F2A0E4E1F4E1359AEDF0D4559527D03165872DC182AC32E0A0C18384081ABA3135AD53B290C7DA53969DF4E835B6D6B4348D8C0C583EAC0984858C90EBD42CAB7960C30C641330841AE433C8C8C8166C660340945EE6DF12C75E6E5B6E3EA589E06D39DFEFDFB6EF03D04B4C613EFB4E39771EF36E39671CFBB7DC5E47466CCCD39E47E5E6F3745F31CC0E0BAE66B8734FD61CE538216F271BB84D3FCFGF6F34FB5E4C1			BB91E855C96926DCEE68F88E748D500FFEB45D749EFC6F653EBC3E3E90BEA22C339CE8E7DE2F9C98FB1D2925EC1DED38FFCF5D8EE8F7819881378CA077DE347E6C3AFC0ACF835CAE7A0DA093E60D47BCFF3E182F41BB6FA5FC51342D0EC2BC49F57BA8BD837008E787604DD121B937E369A6D82AE97F52770CDC460A43261DE8AD4D7C8C465131B134B5F3CB30A136F22F1422B9EA6C83FD27FAE4CF09B264161592B160AE71AB01129EC9943CCA09A47770126CD3C4599BA8890A964BE93F476AECBEDADA1AB785			491BFFA9874F45F1EBE0FEA25BAFF656503523860C1CF4FEE5F6A4593A269019EECE89491671F6561BC76EC3F37F9E5B9A0DCB86FA86GD97333FA36268F7856E35ECFAFA25EB878FE82E075FDCC16138718ACDDB796F11BDC67CC6FC41025E2AA1161525410AC52244E2C77713E1714233D0B86DAB240AA008C003C68F4D3854007585FDEAEBD8CED1DCB314A9E0F6C2D73796AA5377F1C6C96A47836D800C2F1EDC20F6CF7F39C71290FAE9D511107C1F374C8FF8A79C0A747FCA03EED9ED738A1A5BBDBC737F1			4F25E4DF21F3A851A15D08DEABAA10DED100CFGD88E3096001B86BEB70D69D5DED6FEAB3D9A3D0A60777212A3687271FE25BEA8CAEE41CF75FB25EEAC7D74000C5BFC5B6308DD624A35F6D93334851F5DF03B2C09ABB755CCA376F0CE8B59052CDDD69FE9EDE55A687D4067F89A7243D9588FA742F7A675D1021F0F71EBB4F8626325980F7A6B00E61F4E7C36EB975321B9EBBA17DB5A2A2BC374CF9ACC095309BCA9534377F6DE950AA51BG1FB7A35DF4842081408DB08EA0EA865B5F7F14FD7EB57D562E59DB			B276D8795F21950694BF5F688DA83C37C768607DA26F1204GC7F9EA4B116C2E9163EC78BC75409ADF88DE414F23G8333739E819CA9C0F8DA4AF7A39E3F0029CE51A340829E9F47666DA85F8B2D448714F61F1BD7049087217F2B9C59729A5F81B34284707D628CE4738A9C339261FB95G31555347906E20A15DD4EBE0F6F926FC8F34CD605802E431B408BDC88C5EBF4C56FF3A824592619A44498641A7F85D70912034E7AB36076C52AB2BB22F45F8F4C62CA0F8C0453FD4311B60E18E2D15997DB5CC679545			AF3A020A609094C574760546EF443284C69C3FGC74FF8B572B1A768A5815CD4757B2AF22FC63FE6D99E887A1CE867281D9AF11C1D8C7CF186167F66DEC479B045407C7435AE66278DBB67F2C7FEF5CE57CF8D9003DEB4907F5CE288BFEB0B701C21B50EDD6C0AF076D28C7AE76F76E30BBD629ADB7F477991903B1F34A03B974E841F8238B213597D31CAB3B9EF75FCC0E0A72C558FBBA638C3DEC6F8932AA27B5823D57ABE76F8153E0F7D34EAEC9FDAD92567C304764BAA14DB64C12F46A7FFD335871FE12FD7			40C22BC3B8D2DF3C66C436903D2252A93A7B8445A1DE9720EE1A09FC2B891F41A1781EB4137952E0817325426B3339A7AE9FB46965336839DF18DE1CC97CE0534C10AF9119D69FC3B697A4418306324AC12FC2704F6373CD71B43E2C2A56677DF5B5724781E11872BDDB7DA60762089494D45D927837110D7D2287368A9DD8DA63DD295756F87977271BD0BDF889DA9FG99DB570074D58BA955DF2E1D403983788CG0977B3FF69B87E3E661CD2C7314A12C44C2E6E0755120B76CF78F7D000B00C8EF2132A43D9			4B1EB0DA875507505BACC89FC99383D26EC77A38547A8E6588029B463863E0148DDBD94EBD172B2DC75D01DA5D3DC310BB0B6CD9612C70FC75D08D1A3781704ED9CC77A7AD5A98D5978848BDA2CE87F49F5E4C2A62EED54376618CA36172354D69E89021226D2B170760EA006B4995B84E213850BF0B551315B63497C668A7812CD26539F9E2349F5DF562ADE8FBC5FFG6AA037B044ECFA7789E49B141FA81A55EDE5DADB256EF9D237EEC310C6ED34E5142D7EF4924911EF043CEEE43219EAF6EBEC85B5A62463			BE58C9A6CFC24DD66257341FD8134D7C1AE3F171A9DC77549A75632CB38C5F8FFDDA5FE0FB5DB40657BDCBB1FE12B13C6EB9E1E3F50F81E85CEC16077FF08A6965063EB21B6955F8F227C6AF3BACFA95D5270DA75159147DE21F68E53857B18EAAEC9C2CC8AEFB896F71F818B38E0060CED991AE997A29AA6E7186045B847D9DF3D8BEDAE4C371A0DF6D7FG77EB54FE1DADD2AE3993C06B0C4ED75D5F689A61B90E58ED5DA934C7C3EAFFBD6E8FD37E3D5C9B756F223D91FA79208429C58E882DBEDA3A21FD1C03			6F035826E85C15B9AC5EAD9EC43125970ABBC8B78E1F5043A98FA05EF6AB0B15EB01B783A08F7095GCEG32E6EA831AC391956C47498F20BB7A7EB31CAAD36D47682E2FBD55D6996EA22808728AB4A67F51260D49DC8C29E78A212D0EE16BFCEEC5716DAAFF0D9FAA898C021CA51D2257AD8F42EC282A05E05250FA392555F92631650B4B2DAD172D4D2D8E9BBD4F46C16DF92EFE4B92B17659E3485E3AE93B4349E71298F4C3351B81E829B188372DA1AFEC4FFE8B8CA550927A7191F4F4768FF1DA7A4088BA12			35FD2B16BEF384BDDBB31E683532085D1D372C0C632407EBA23EB16C1BCB7429252DF1BF1F19D5F657B6B24FD3973576491DDE08E3015EBCC3F47C783961EF95FFB904769047F94DA6D9ACE751BECB44067BCF67D0BD126632B8AE5BD11CD98F7D1CF9F0271D47624C1CC644DB8DFD67BC96E77A4EFC8AED87FF155EF6ECEED1117D38C083245DAF0337AB43840B33A7BD1B4FDB6F6C1E7A63ED4C3E090F4D61123E3DA5736D88F6D16691FBC451367A93BE9335C4179DCD48B64B003696A0ABB65D348F60A84019			D8265B42B3C8C628B31178F50A427774638C464A4F8ED1988C2151A1A5F3FF5E0CA4A5F3E41CA90AE49F1861ACECCB2B6BAAE49DA75F473138F560F438EDAE4506621BAFF6F41EA1F963853CEF63E3C95E582E6257E33CD103A779A40871281F8CB4F39C53BB36914D29563CE45B28BE8B9B117F237A94E207F89D87B287B0FA7B086E9B76A37AF8184B88308CE0B540BAF56E32337B09CDF56CE9030217458E365E3BCD11EB79FDCD373EC797B521BA43A5AB0A6CC173B37C27CD48560A6C43C802BB5A04EC81E9			31DFA12C94DF55047CDE92FAB11A66C1FCEEF266035F4CE7F970241D65465A79AC4F3DECC775259B7A8A40F800A81536915362203F9CA08DA067C1C63BE1C7398B71066F75F89D5CAE3A46887F0F40974A0FD1F80D6D9168DFA787E60FF1DE096D5E589FF97F328AEE3DFFBB8BF06D88F6F78E7B84025BD3006B175E5E00207A49FB8539AA2EB1E01783A272CC12275ACFA3FE099F160340BF69C19C63DAD8FEBB887D5A8769DB9F3428C6C945BCCEFB7E987A1139F785D0DDA33924D2521FE0277DB2526F38CE7B			6524DF309B594C25F8DB51A33A73A1344E61735A1C326FA1A2C3AD34047EC3079E5D2052ABBA756889AA3D6102163E0C523362218E46F160DCABFBB34E871CBD1E55A0FD7BD16CD26F89224BD3923C66A961DDCA09GE14CE2E989CAD2B3B5ABC7F247F770DC93E18EA3C0D2BC3B278E9533389DBFEFBA17762A7E7B76DAE725E9D5BC590B0C78D0BE9BB729B30B4CF3F520C655F38626C54A2FC79750F74A8521F9184FC2EE6C0D109B1BF9974B0D7C799CFABE2296B0BD3EBC2DFD27CFFE275294A97F2450F557			E956BF8AFA1039B7B8587D6948C276C6BF5049F06E05EC8F4CFB4B395B3C2B5587A158F969BD6D4685165F8D8BD9ECF1345E595BB2FF5B63C87E79AB7609540569EA8DC3705BF07ED92B4193FF1C2C7A63BA205997317A63D0915A33C4682F82C8836092A0EF8154A4307C92DFF0143B453B2CD376B5C3C012B4CF06E47EEF9523796DB01784B099A08EA099A0D51DFFE3815A0FC875CE1BAC63A29A55533C883B0253191FC737AFE2435E73FAB6CCCB20F7D65A66AE06DAFBB179A6323DFAG1D61EA40B981A400			71GB10B19DC7505377C3D41B6B4466F8DD75A7564DAC6E5D8CD5BF50BC3B9050C73F56A0D6316903EBC5A9EDC92BEEE5C853DF1B5144F3EE4F46EA263326C1C7A3DD373FDDF6BB7F95753DFFB517FF58DDA9F95C54E17470B745FAE7FD9247FF6E9AB9A7B6D72DCD16437CBE75168374BC94511E53B377856395CD02CDF0B4DA99EDD0B45966B57E28B0AC757E2DF62B86D861FD11630DA6CF767D9ADB6CE45ED45B1B7867A4BD5DC97462D017E16A56CACEDB890D94FAD87747740F4D0FF8FF28E0E7D9BC56E41			C8FBC4649BECE73A65AEE5B22FEEE73A6DD3F11BBB34FA905C5D1DECEC2D4A17564946B62B386D97C60F1DFA010D7529FC1BAE3031B71732B7002873283ED140A0641DA196DD0769DB4566732CFEB282FFA2C0AAC086C0DEA29B7F018379CD3F6C972F2318A9B9E1A6D63D317711CA873B67D72863E4475E91636AA4314F0BEE93F44CBD6A98B70CA1322DB89C12AD3D1D49968574B80065GE9GB98FB37E32A3A17E3FF52A75A250EBGAE815C84B0287C2E4FC27C6FF4B37EE4202F82D88F107B885CB19FE179			7E63B6A6237D9176FEF12EAD7C7D62A3CE7B7E70D5DB787B4505917445ED616F97D3CCDA7A8BED616F970DF4BC31EB33837D8D0776CD47017E8FBD69D8EDADCEDB1B4AEF7C5A7CC467F7BB184E93D51D2D9DE36B9C6C885779C7A368319DE36B7CCCC7A41D09CCC5DDCC26A7D4199CDDE34BB421ABDC26D7C6509F6D9ADB26173B461629321B4934C9152927BBDC267291EBCE698E1729FD445B574F3B43E57A6E08711B3B43E5325171A47F95365DD95D78C1471D0DBB5CF5E763AC5D37BB0E7C6D5320B58A5A78			D739EC05B3BB847FB541EF170281B3B8F32F687760378E3359CCFE01D238FFE8D8405995E87A790039271F7776896ECF946E909463E6CFB02018DD02590FFEE677AB025B8C137012E49E147D83E8987AABA1054BD7E4336871115FC84CCA3FC067A9D1B8D3EB9339FB9C7ACA7BA638E94207915FCCEFA6117AE9F2D278EFA029B664D7A900CFCBE2792E500682D724B7AA0787240588BBD067F523772A7AE1C5886537E7ECE87EG6321C47A3B3D8D49FDD5B3663FD0CB87884A65815F1B8EGG40A6GGD0CB81			8294G94G88G88G82D6D7B04A65815F1B8EGG40A6GG8CGGGGGGGGGGGGGGGGGE2F5E9ECE4E5F2A0E4E1F4E1D0CB8586GGGG81G81GBAGGG558EGGGG		**end of data**/	}	/**	 * Return the lbl1 property value.	 * 	 * @return JLabel	 */	/* WARNING: THIS METHOD WILL BE REGENERATED. *//* &FrmCTL011.getlbl1& */	private JLabel getlbl1()	{		if (ivjlbl1 == null)		{			try			{				ivjlbl1 = new JLabel();				ivjlbl1.setName("lbl1");				ivjlbl1.setText(TXT_SERVERPLUS_CHANGED);				ivjlbl1.setBounds(36, 44, 330, 14);				ivjlbl1.setHorizontalTextPosition(					SwingConstants.CENTER);				ivjlbl1.setHorizontalAlignment(SwingConstants.CENTER);				// user code begin {1}				// user code end			}			catch (Throwable leIVJEx)			{				// user code begin {2}				// user code end				handleException(leIVJEx);			}		}		return ivjlbl1;	}	/**	 * Return the lbl2 property value.	 * 	 * @return JLabel	 */	/* WARNING: THIS METHOD WILL BE REGENERATED. *//* &FrmCTL011.getlbl2& */	private JLabel getlbl2()	{		if (ivjlbl2 == null)		{			try			{				ivjlbl2 = new JLabel();				ivjlbl2.setName("lbl2");				ivjlbl2.setText(MSG_RTS_MUST_BE_RESTARTED);				ivjlbl2.setBounds(36, 95, 330, 14);				ivjlbl2.setHorizontalAlignment(SwingConstants.CENTER);				// user code begin {1}				// user code end			}			catch (Throwable leIVJEx)			{				// user code begin {2}				// user code end				handleException(leIVJEx);			}		}		return ivjlbl2;	}	/**	 * Return the lbl3 property value.	 * 	 * @return JLabel	 */	/* WARNING: THIS METHOD WILL BE REGENERATED. *//* &FrmCTL011.getlbl3& */	private JLabel getlbl3()	{		if (ivjlbl3 == null)		{			try			{				ivjlbl3 = new JLabel();				ivjlbl3.setName("lbl3");				ivjlbl3.setText(MSG_TO_IMPLEMENT_CHANGE);				ivjlbl3.setBounds(36, 117, 330, 14);				ivjlbl3.setHorizontalAlignment(SwingConstants.CENTER);				// user code begin {1}				// user code end			}			catch (Throwable leIVJEx)			{				// user code begin {2}				// user code end				handleException(leIVJEx);			}		}		return ivjlbl3;	}	/**	 * Return the RTSDialogBoxContentPane property value.	 * 	 * @return JPanel	 */	/* WARNING: THIS METHOD WILL BE REGENERATED. *//* &FrmCTL011.getRTSDialogBoxContentPane& */	private JPanel getRTSDialogBoxContentPane()	{		if (ivjRTSDialogBoxContentPane == null)		{			try			{				ivjRTSDialogBoxContentPane = new JPanel();				ivjRTSDialogBoxContentPane.setName(					"RTSDialogBoxContentPane");				ivjRTSDialogBoxContentPane.setLayout(null);				getRTSDialogBoxContentPane().add(					getlbl1(),					getlbl1().getName());				getRTSDialogBoxContentPane().add(					getlbl2(),					getlbl2().getName());				getRTSDialogBoxContentPane().add(					getlbl3(),					getlbl3().getName());				getRTSDialogBoxContentPane().add(					getbtnOk(),					getbtnOk().getName());				// user code begin {1}				// user code end			}			catch (Throwable leIVJEx)			{				// user code begin {2}				// user code end				handleException(leIVJEx);			}		}		return ivjRTSDialogBoxContentPane;	}	/**	 * Called whenever the part throws an exception.	 * 	 * @param aeEx Throwable	 *//* &FrmCTL011.handleException& */	private void handleException(Throwable aeEx)	{		// defect 7891		// Show the exception to the user for action		///* Uncomment the following lines to print uncaught exceptions		// * to stdout 		// */		// System.out.println("--------- UNCAUGHT EXCEPTION ---------");		// exception.printStackTrace(System.out);		RTSException leRTSEx =			new RTSException(RTSException.JAVA_ERROR, (Exception) aeEx);		leRTSEx.displayError(this);		// end defect 7891	}	/**	 * Initialize the class.	 */	/* WARNING: THIS METHOD WILL BE REGENERATED. *//* &FrmCTL011.initialize& */	private void initialize()	{		try		{			// user code begin {1}			// user code end			setName(CTL011_FRM_NAME);			setDefaultCloseOperation(				WindowConstants.DO_NOTHING_ON_CLOSE);			setSize(426, 240);			setTitle(CTL011_FRAME_TITLE);			setContentPane(getRTSDialogBoxContentPane());		}		catch (Throwable leIVJEx)		{			handleException(leIVJEx);		}		// user code begin {2}		// user code end	}	/**	 * main entrypoint - starts the part when it is run 	 * as an application	 * 	 * @param args String[]	 *//* &FrmCTL011.main& */	public static void main(String[] args)	{		try		{			FrmCTL011 laFrmCTL011;			laFrmCTL011 = new FrmCTL011();			laFrmCTL011.setModal(true);			laFrmCTL011.addWindowListener(new WindowAdapter()			{				public void windowClosing(WindowEvent aaWE)				{					System.exit(0);				};			});			laFrmCTL011.show();			Insets insets = laFrmCTL011.getInsets();			laFrmCTL011.setSize(				laFrmCTL011.getWidth() + insets.left + insets.right,				laFrmCTL011.getHeight() + insets.top + insets.bottom);			laFrmCTL011.setVisibleRTS(true);		}		catch (Throwable leIVJEx)		{			System.err.println(ScreenConstant.MSG_MAIN_ERR_CATCH);			leIVJEx.printStackTrace(System.out);		}	}	/**	 * All subclasses must implement this method - it sets the data 	 * on the screen and is how the controller relays information to 	 * the view.	 * 	 * @param aaDataObject Object	 *//* &FrmCTL011.setData& */	public void setData(Object aaDataObject)	{		//empty code block	}}/* #FrmCTL011# */