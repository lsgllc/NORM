package com.txdot.isd.rts.webservices.agnt.data;import java.util.Calendar;/* * RtsWebAgntSecurity.java * * (c) Texas Department of Motor Vehicles 2010 * --------------------------------------------------------------------- * Change History: * Name			Date		Description * ------------	-----------	-------------------------------------------- * Ray Rowehl	01/11/2011	Initial load. * 							defect 10670 Ver 6.7.0 * --------------------------------------------------------------------- *//** * Defines the security settings for an Agent within an Agency * * @version	6.7.0			01/11/2011 * @author	Ray Rowehl * <br>Creation Date:		01/11/2011 14:34:17 *//* &RtsWebAgntSecurity& */public class RtsWebAgntSecurity{/* &RtsWebAgntSecurity'caChngTimeStmp& */	private Calendar caChngTimeStmp;/* &RtsWebAgntSecurity'cbAgncyAuthAccs& */	private boolean cbAgncyAuthAccs;/* &RtsWebAgntSecurity'cbAgncyInfoAccs& */	private boolean cbAgncyInfoAccs;/* &RtsWebAgntSecurity'cbAgntAuthAccs& */	private boolean cbAgntAuthAccs;/* &RtsWebAgntSecurity'cbAprvBatchAccs& */	private boolean cbAprvBatchAccs;/* &RtsWebAgntSecurity'cbBatchAccs& */	private boolean cbBatchAccs;/* &RtsWebAgntSecurity'cbDashAccs& */	private boolean cbDashAccs;/* &RtsWebAgntSecurity'cbRenwlAccs& */	private boolean cbRenwlAccs;/* &RtsWebAgntSecurity'cbRePrntAccs& */	private boolean cbRePrntAccs;/* &RtsWebAgntSecurity'cbRptAccs& */	private boolean cbRptAccs;/* &RtsWebAgntSecurity'cbSubmitBatchAccs& */	private boolean cbSubmitBatchAccs;/* &RtsWebAgntSecurity'cbVoidAccs& */	private boolean cbVoidAccs;/* &RtsWebAgntSecurity'ciAgncyIdntyNo& */	private int ciAgncyIdntyNo;/* &RtsWebAgntSecurity'ciAgntIdntyNo& */	private int ciAgntIdntyNo;/* &RtsWebAgntSecurity'ciAgntSecrtyIdntyNo& */	private int ciAgntSecrtyIdntyNo;	/**	 * Get the Identitiy Number for the Agency.	 * 	 * @return int	 *//* &RtsWebAgntSecurity.getAgncyIdntyNo& */	public int getAgncyIdntyNo()	{		return ciAgncyIdntyNo;	}	/**	 * Get the Identity Number for the Agent.	 * 	 * @return int	 *//* &RtsWebAgntSecurity.getAgntIdntyNo& */	public int getAgntIdntyNo()	{		return ciAgntIdntyNo;	}	/**	 * Get the Identity Number for Agent Security.	 * 	 * @return int	 *//* &RtsWebAgntSecurity.getAgntSecrtyIdntyNo& */	public int getAgntSecrtyIdntyNo()	{		return ciAgntSecrtyIdntyNo;	}		/**	 * Get the timestamp from the Last Change.	 * 	 * @return Calendar	 *//* &RtsWebAgntSecurity.getChngTimeStmp& */	public Calendar getChngTimeStmp()	{		return caChngTimeStmp;	}	/**	 * Get the indicator for Agency Authorization Access.	 * 	 * @return boolean	 *//* &RtsWebAgntSecurity.isAgncyAuthAccs& */	public boolean isAgncyAuthAccs()	{		return cbAgncyAuthAccs;	}	/**	 * Get the indicator for Agency Information Access.	 * 	 * @return boolean	 *//* &RtsWebAgntSecurity.isAgncyInfoAccs& */	public boolean isAgncyInfoAccs()	{		return cbAgncyInfoAccs;	}	/**	 * Get the indicator for using Agent Authority.	 * 	 * @return boolean	 *//* &RtsWebAgntSecurity.isAgntAuthAccs& */	public boolean isAgntAuthAccs()	{		return cbAgntAuthAccs;	}	/**	 * Get the indicator for Batch Approval.	 * 	 * @return boolean	 *//* &RtsWebAgntSecurity.isAprvBatchAccs& */	public boolean isAprvBatchAccs()	{		return cbAprvBatchAccs;	}	/**	 * Get the indicator for Batch Access.	 * 	 * @return boolean	 *//* &RtsWebAgntSecurity.isBatchAccs& */	public boolean isBatchAccs()	{		return cbBatchAccs;	}	/**	 * Get the indicator for DashBoard Access.	 * 	 * @return boolean	 *//* &RtsWebAgntSecurity.isDashAccs& */	public boolean isDashAccs()	{		return cbDashAccs;	}	/**	 * Get the indicator for Renewal.	 * 	 * @return boolean	 *//* &RtsWebAgntSecurity.isRenwlAccs& */	public boolean isRenwlAccs()	{		return cbRenwlAccs;	}	/**	 * Get the inidicator for Reprint Access.	 * 	 * @return boolean	 *//* &RtsWebAgntSecurity.isRePrntAccs& */	public boolean isRePrntAccs()	{		return cbRePrntAccs;	}	/**	 * Get the indicator for Report Access.	 * 	 * @return boolean	 *//* &RtsWebAgntSecurity.isRptAccs& */	public boolean isRptAccs()	{		return cbRptAccs;	}	/**	 * Get the indicator for Submitting Batches.	 * 	 * @return boolean	 *//* &RtsWebAgntSecurity.isSubmitBatchAccs& */	public boolean isSubmitBatchAccs()	{		return cbSubmitBatchAccs;	}	/**	 * Get the indicator for using Void.	 * 	 * @return boolean	 *//* &RtsWebAgntSecurity.isVoidAccs& */	public boolean isVoidAccs()	{		return cbVoidAccs;	}	/**	 * Set the Identity Number for Agent Security.	 * 	 * @param aiAgntSecrtyIdntyNo	 *//* &RtsWebAgntSecurity.setAgentSecurityIdntyNo& */	public void setAgentSecurityIdntyNo(int aiAgntSecrtyIdntyNo)	{		ciAgntSecrtyIdntyNo = aiAgntSecrtyIdntyNo;	}	/**	 * Set the indicator for Agency Authorization Access.	 * 	 * @param abAgncyAuthAccs	 *//* &RtsWebAgntSecurity.setAgncyAuthAccs& */	public void setAgncyAuthAccs(boolean abAgncyAuthAccs)	{		cbAgncyAuthAccs = abAgncyAuthAccs;	}	/**	 * Set the Identitiy Number for the Agency.	 * 	 * @param aiAgncyIdntyNo	 *//* &RtsWebAgntSecurity.setAgncyIdntyNo& */	public void setAgncyIdntyNo(int aiAgncyIdntyNo)	{		ciAgncyIdntyNo = aiAgncyIdntyNo;	}	/**	 * Set the indicator for Agency Information Access.	 * 	 * @param abAgncyInfoAccs	 *//* &RtsWebAgntSecurity.setAgncyInfoAccs& */	public void setAgncyInfoAccs(boolean abAgncyInfoAccs)	{		cbAgncyInfoAccs = abAgncyInfoAccs;	}	/**	 * Set the indicator for using Agent Authority.	 * 	 * @param abAgntAuthAccs	 *//* &RtsWebAgntSecurity.setAgntAuthAccs& */	public void setAgntAuthAccs(boolean abAgntAuthAccs)	{		cbAgntAuthAccs = abAgntAuthAccs;	}	/**	 * Set the Identity Number for the Agent.	 * 	 * @param aiAgntIdntyNo	 *//* &RtsWebAgntSecurity.setAgntIdntyNo& */	public void setAgntIdntyNo(int aiAgntIdntyNo)	{		ciAgntIdntyNo = aiAgntIdntyNo;	}	/**	 * Set the indicator for Batch Approval.	 * 	 * @param abAprvBatchAccs	 *//* &RtsWebAgntSecurity.setAprvBatchAccs& */	public void setAprvBatchAccs(boolean abAprvBatchAccs)	{		cbAprvBatchAccs = abAprvBatchAccs;	}	/**	 * Set the indicator for Batch Access.	 * 	 * @param abBatchAccs	 *//* &RtsWebAgntSecurity.setBatchAccs& */	public void setBatchAccs(boolean abBatchAccs)	{		cbBatchAccs = abBatchAccs;	}	/**	 * Set the timestamp from the Last Change.	 * 	 * @param aaChngTimeStmp	 *//* &RtsWebAgntSecurity.setChngTimeStmp& */	public void setChngTimeStmp(Calendar aaChngTimeStmp)	{		caChngTimeStmp = aaChngTimeStmp;	}	/**	 * Set the indicator for DashBoard Access.	 * 	 * @param abDashAccs	 *//* &RtsWebAgntSecurity.setDashAccs& */	public void setDashAccs(boolean abDashAccs)	{		cbDashAccs = abDashAccs;	}	/**	 * Set the indicator for Renewal.	 * 	 * @param abRenwlAccs	 *//* &RtsWebAgntSecurity.setRenwlAccs& */	public void setRenwlAccs(boolean abRenwlAccs)	{		cbRenwlAccs = abRenwlAccs;	}	/**	 * Set the inidicator for Reprint Access.	 * 	 * @param abRePrntAccs	 *//* &RtsWebAgntSecurity.setRePrntAccs& */	public void setRePrntAccs(boolean abRePrntAccs)	{		cbRePrntAccs = abRePrntAccs;	}	/**	 * Set the indicator for Report Access.	 * 	 * @param abRptAccs	 *//* &RtsWebAgntSecurity.setRptAccs& */	public void setRptAccs(boolean abRptAccs)	{		cbRptAccs = abRptAccs;	}	/**	 * Set the indicator for Submitting Batches.	 * 	 * @param abSubmitBatchAccs	 *//* &RtsWebAgntSecurity.setSubmitBatchAccs& */	public void setSubmitBatchAccs(boolean abSubmitBatchAccs)	{		cbSubmitBatchAccs = abSubmitBatchAccs;	}	/**	 * Set the indicator for using Void.	 * 	 * @param abVoidAccs	 *//* &RtsWebAgntSecurity.setVoidAccs& */	public void setVoidAccs(boolean abVoidAccs)	{		cbVoidAccs = abVoidAccs;	}}/* #RtsWebAgntSecurity# */