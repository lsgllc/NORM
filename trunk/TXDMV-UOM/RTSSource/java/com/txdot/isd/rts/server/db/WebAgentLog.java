package com.txdot.isd.rts.server.db;import java.sql.Types;import java.util.Vector;import com.txdot.isd.rts.services.data.WebAgentLogData;import com.txdot.isd.rts.services.exception.RTSException;import com.txdot.isd.rts.services.util.Log;import com.txdot.isd.rts.services.util.constants.CommonConstant;import com.txdot.isd.rts.server.dataaccess.DBValue;import com.txdot.isd.rts.server.dataaccess.DatabaseAccess;/* * WebAgentLog.java * * (c) Texas Department of Transportation 2010 * --------------------------------------------------------------------- * Change History: * Name			Date		Description * ------------	-----------	-------------------------------------------- * K Harrell	12/28/2010	Created * 							defect 10708 Ver 6.7.0  * --------------------------------------------------------------------- *//** * SQL class for RTS_WEB_AGNT_LOG  * * @version	6.7.0			12/28/2010 * @author	Kathy Harrell * <br>Creation Date:		12/28/2010 20:28:17 *//* &WebAgentLog& */public class WebAgentLog{/* &WebAgentLog'caDA& */	private DatabaseAccess caDA;/* &WebAgentLog'csMethod& */	private String csMethod;	/**	 * WebAgentLog Constructor	 * 	 *//* &WebAgentLog.WebAgentLog& */	public WebAgentLog(DatabaseAccess aaDA) throws RTSException	{		caDA = aaDA;	}	/**	 * Method to Insert into RTS.RTS_WEB_AGNT 	 *	 * @param  aaData	WebAgentData	 * @return WebAgentData	 * @throws RTSException 	 *//* &WebAgentLog.insWebAgentLog& */	public WebAgentLogData insWebAgentLog(WebAgentLogData aaData)		throws RTSException	{		csMethod = "insWebAgentLog";		Vector lvValues = new Vector();		Log.write(Log.METHOD, this, csMethod + " - Begin");		String lsIns =			"INSERT into RTS.RTS_WEB_AGNT_LOG("				+ "USERNAME,"				+ "DMVUSERINDI,"				+ "FSTNAME,"				+ "MINAME,"				+ "LSTNAME,"				+ "AGNTPHONE,"				+ "AGNTEMAIL,"				+ "INITOFCNO,"				+ "DELETEINDI,"				+ "CHNGTIMESTMP,"				+ "AGNTIDNTYNO,"				+ "UPDTNGAGNTIDNTYNO)"				+ " VALUES ( "				+ " ?,"				+ " ?,"				+ " ?,"				+ " ?,"				+ " ?,"				+ " ?,"				+ " ?,"				+ " ?,"				+ " ?,"				+ " ?,"				+ " ?,"				+ " ?)";		try		{			// 1			lvValues.addElement(				new DBValue(					Types.CHAR,					DatabaseAccess.convertToString(						aaData.getUserName())));			// 2			lvValues.addElement(				new DBValue(					Types.INTEGER,					DatabaseAccess.convertToString(						aaData.getDMVUserIndi())));			// 3			lvValues.addElement(				new DBValue(					Types.CHAR,					DatabaseAccess.convertToString(						aaData.getFstName())));			// 4			lvValues.addElement(				new DBValue(					Types.CHAR,					DatabaseAccess.convertToString(						aaData.getMIName())));			// 5			lvValues.addElement(				new DBValue(					Types.CHAR,					DatabaseAccess.convertToString(						aaData.getLstName())));			// 6 			lvValues.addElement(				new DBValue(					Types.CHAR,					DatabaseAccess.convertToString(						aaData.getPhone())));			// 7			lvValues.addElement(				new DBValue(					Types.CHAR,					DatabaseAccess.convertToString(						aaData.getEMail())));			// 8			lvValues.addElement(				new DBValue(					Types.INTEGER,					DatabaseAccess.convertToString(						aaData.getInitOfcNo())));			// 9 			lvValues.addElement(				new DBValue(					Types.INTEGER,					DatabaseAccess.convertToString(						aaData.getDeleteIndi())));			// 10 			lvValues.addElement(				new DBValue(					Types.TIMESTAMP,					DatabaseAccess.convertToString(						aaData.getChngTimestmp())));			// 11 			lvValues.addElement(				new DBValue(					Types.INTEGER,					DatabaseAccess.convertToString(						aaData.getAgntIdntyNo())));			// 12 			lvValues.addElement(				new DBValue(					Types.INTEGER,					DatabaseAccess.convertToString(						aaData.getUpdtngAgntIdntyNo())));			Log.write(Log.SQL, this, csMethod + " - SQL - Begin");			caDA.executeDBInsertUpdateDelete(lsIns, lvValues);			Log.write(Log.SQL, this, csMethod + " - SQL - End");			Log.write(Log.METHOD, this, csMethod + " - End");			return aaData;		}		catch (RTSException aeRTSEx)		{			Log.write(				Log.SQL_EXCP,				this,				csMethod + " - Exception - " + aeRTSEx.getMessage());			throw aeRTSEx;		}	} //END OF INSERT METHOD		/**	 * Purge RTS_WEB_AGNT_LOG	 * 	 * @param aiPurgeDays int	 * @return int	 * @throws RTSException	 *//* &WebAgentLog.purgeWebAgentLog& */	public int purgeWebAgentLog(int aiPurgeDays) throws RTSException	{		csMethod = "purgeWebAgentLog";		Log.write(			Log.METHOD,			this,			csMethod + CommonConstant.SQL_METHOD_BEGIN);		String lsSqlDelData =			"DELETE FROM RTS.RTS_WEB_AGNT_LOG "				+ " WHERE "				+ " CHNGTIMESTMP "				+ " < (CURRENT TIMESTAMP - ? DAYS)";		Vector lvValues = new Vector();		lvValues.add(			new DBValue(				Types.INTEGER,				DatabaseAccess.convertToString(aiPurgeDays)));		try		{			Log.write(				Log.SQL,				this,				csMethod + CommonConstant.SQL_BEGIN);			int liNumRows =				caDA.executeDBInsertUpdateDelete(					lsSqlDelData,					lvValues);			Log.write(Log.SQL, this, csMethod + CommonConstant.SQL_END);			return liNumRows;		}		catch (RTSException aeRTSEx)		{			Log.write(				Log.SQL_EXCP,				this,				csMethod					+ CommonConstant.SQL_EXCEPTION					+ aeRTSEx.getMessage());			throw aeRTSEx;		}		finally		{			Log.write(				Log.METHOD,				this,				csMethod + CommonConstant.SQL_METHOD_END);		}	}}/* #WebAgentLog# */