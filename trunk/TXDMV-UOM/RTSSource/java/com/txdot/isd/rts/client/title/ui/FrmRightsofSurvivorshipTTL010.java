package com.txdot.isd.rts.client.title.ui;import java.awt.Dialog;import java.awt.Dimension;import java.awt.Point;import java.awt.Rectangle;import java.awt.event.ActionListener;import java.awt.event.ItemEvent;import java.awt.event.ItemListener;import java.awt.event.KeyEvent;import java.util.Vector;import javax.swing.*;import com.txdot.isd.rts.client.general.ui.AbstractViewController;import com.txdot.isd.rts.client.general.ui.RTSButton;import com.txdot.isd.rts.client.general.ui.RTSDialogBox;import com.txdot.isd.rts.client.general.ui.RTSInputField;import com.txdot.isd.rts.services.data.MFVehicleData;import com.txdot.isd.rts.services.data.ScreenTTL010SavedData;import com.txdot.isd.rts.services.data.TitleData;import com.txdot.isd.rts.services.data.VehicleInquiryData;import com.txdot.isd.rts.services.exception.RTSException;import com.txdot.isd.rts.services.util.CommonValidations;import com.txdot.isd.rts.services.util.SystemProperty;import com.txdot.isd.rts.services.util.UtilityMethods;import com.txdot.isd.rts.services.util.constants.*;/* * FrmRightsofSurvivorshipTTL010.java *  * (c) Texas Department of Transportation 2012 * --------------------------------------------------------------------- * Change History: * Name			Date		Description * ------------	-----------	-------------------------------------------- * K Harrell	01/13/2012	Created * 							defect 10827 Ver 6.10.0  * ---------------------------------------------------------------------  *//** * This form is used to capture Rights of Survivorship Names as well as set the * Additional Survivor Indicator *  * @version 6.10.0 		01/13/2012 * @author Kathy Harrell * @since 				01/13/2012 17:04:17 *//* &FrmRightsofSurvivorshipTTL010& */public class FrmRightsofSurvivorshipTTL010 extends RTSDialogBox		implements ActionListener, ItemListener{	/* &FrmRightsofSurvivorshipTTL010'ivjFrmRightsofSurvivorshipTTL010ContentPane1& */	private JPanel ivjFrmRightsofSurvivorshipTTL010ContentPane1 = null;/* &FrmRightsofSurvivorshipTTL010'ivjstcLblName1& */	private JLabel ivjstcLblName1 = null;/* &FrmRightsofSurvivorshipTTL010'ivjtxtName1& */	private RTSInputField ivjtxtName1 = null;  /* &FrmRightsofSurvivorshipTTL010'ivjtxtName2& */	private RTSInputField ivjtxtName2 = null;/* &FrmRightsofSurvivorshipTTL010'ivjstcLblName2& */	private JLabel ivjstcLblName2 = null; /* &FrmRightsofSurvivorshipTTL010'ivjchkAddlSurvivorsExist& */	private JCheckBox ivjchkAddlSurvivorsExist = null;/* &FrmRightsofSurvivorshipTTL010'ivjstcLblOR& */	private JLabel ivjstcLblOR = null;/* &FrmRightsofSurvivorshipTTL010'ivjbtnEnter& */	private RTSButton ivjbtnEnter = null;/* &FrmRightsofSurvivorshipTTL010'ivjbtnCancel& */	private RTSButton ivjbtnCancel = null;/* &FrmRightsofSurvivorshipTTL010'ivjbtnBypass& */	private RTSButton ivjbtnBypass = null;/* &FrmRightsofSurvivorshipTTL010'ivjbtnReset& */	private RTSButton ivjbtnReset = null;		// boolean /* &FrmRightsofSurvivorshipTTL010'cbByPassAppl& */	private static boolean cbByPassAppl = false; 		// Vector /* &FrmRightsofSurvivorshipTTL010'cvMFValid& */	private static Vector cvMFValid = new Vector();		// Object /* &FrmRightsofSurvivorshipTTL010'caVehInqData& */	private VehicleInquiryData caVehInqData = null;		// Static/* &FrmRightsofSurvivorshipTTL010'TTL010_FRM_TITLE& */	private static final String TTL010_FRM_TITLE = "Rights of Survivorship     TTL010";/* &FrmRightsofSurvivorshipTTL010'NAME1_LBL& */	private static final String NAME1_LBL = "Name 1:";/* &FrmRightsofSurvivorshipTTL010'NAME2_LBL& */	private static final String NAME2_LBL = "Name 2:";/* &FrmRightsofSurvivorshipTTL010'MULTIPLE_CHKBX_LBL& */	private static final String MULTIPLE_CHKBX_LBL = "Multiple Survivors";/* &FrmRightsofSurvivorshipTTL010'ENTER_BTN_LABEL& */	private static final String ENTER_BTN_LABEL = "Enter";/* &FrmRightsofSurvivorshipTTL010'CANCEL_BTN_LABEL& */	private static final String CANCEL_BTN_LABEL = "Cancel";/* &FrmRightsofSurvivorshipTTL010'RESET_BTN_LABEL& */	private static final String RESET_BTN_LABEL = "Reset";/* &FrmRightsofSurvivorshipTTL010'BYPASS_BTN_LABEL& */	private static final String BYPASS_BTN_LABEL = "Bypass";/* &FrmRightsofSurvivorshipTTL010'OR_LBL& */	private static final String OR_LBL = "OR";		/**	 * FrmRightsofSurvivorshipTTL010 constructor comment.	 *//* &FrmRightsofSurvivorshipTTL010.FrmRightsofSurvivorshipTTL010& */	public FrmRightsofSurvivorshipTTL010()	{		super();		initialize();	}	/**	 * FrmRightsofSurvivorshipTTL010 constructor comment.	 * 	 * @param owner	 *            java.awt.Dialog	 *//* &FrmRightsofSurvivorshipTTL010.FrmRightsofSurvivorshipTTL010$1& */	public FrmRightsofSurvivorshipTTL010(Dialog owner)	{		super(owner);		initialize();	}	/**	 * FrmRightsofSurvivorshipTTL010 constructor comment.	 *//* &FrmRightsofSurvivorshipTTL010.FrmRightsofSurvivorshipTTL010$2& */	public FrmRightsofSurvivorshipTTL010(JFrame parent)	{		super(parent);		initialize();	}	/**	 * Invoked when an action occurs.	 * 	 * @param aaAE	 *//* &FrmRightsofSurvivorshipTTL010.actionPerformed& */	public void actionPerformed(java.awt.event.ActionEvent aaAE)	{		if (!startWorking())		{			return;		}		try		{			if (aaAE.getSource() instanceof RTSButton &&  					((RTSButton) aaAE.getSource()).isEnabled())			{				clearAllColor(this);				UtilityMethods.trimRTSInputField(this);				// RESET NAMES 				if (aaAE.getSource() == getbtnReset())				{					handleResetRequest(); 				}				// CANCEL				else if (aaAE.getSource() == getbtnCancel())				{					saveScreenTTL010Data();					getController().processData(							AbstractViewController.CANCEL, null);				}				// ENTER, BYPASS				else if (aaAE.getSource() == getbtnBypass() || 						(aaAE.getSource() == getbtnEnter() && validateData()))				{					getController().processData(							AbstractViewController.ENTER, setDataToDataObject());				}			}		}		finally		{			doneWorking();		}	}	/**	 * This method initializes ivjbtnBypass		 * 		 * @return RTSButton	 *//* &FrmRightsofSurvivorshipTTL010.getbtnBypass& */	private RTSButton getbtnBypass()	{		if (ivjbtnBypass == null)		{			try			{				ivjbtnBypass = new RTSButton();				ivjbtnBypass.setBounds(new Rectangle(321, 186, 82, 26));				ivjbtnBypass.setMnemonic(KeyEvent.VK_B);				ivjbtnBypass.addActionListener(this);				ivjbtnBypass.setText(BYPASS_BTN_LABEL);				ivjbtnBypass.setEnabled(false);			}			catch (Throwable aeIVJEx)			{				// user code begin {2}				// user code end				handleException(aeIVJEx);			}		}		return ivjbtnBypass;	}	/**	 * This method initializes ivjbtnCancel		 * 		 * @return RTSButton	 *//* &FrmRightsofSurvivorshipTTL010.getbtnCancel& */	private RTSButton getbtnCancel()	{		if (ivjbtnCancel == null)		{			try			{				ivjbtnCancel = new RTSButton();				ivjbtnCancel.setBounds(new Rectangle(145, 186, 75, 26));				ivjbtnCancel.setText(CANCEL_BTN_LABEL);				ivjbtnCancel.addActionListener(this);			}			catch (Throwable aeIVJEx)			{				// user code begin {2}				// user code end				handleException(aeIVJEx);			}		}		return ivjbtnCancel;	}	/**	 * This method initializes ivjbtnEnter		 * 		 * @return RTSButton	 *//* &FrmRightsofSurvivorshipTTL010.getbtnEnter& */	private RTSButton getbtnEnter()	{		if (ivjbtnEnter == null)		{			try			{				ivjbtnEnter = new RTSButton();				ivjbtnEnter.setBounds(new Rectangle(59, 186, 74, 26));				ivjbtnEnter.addActionListener(this);				ivjbtnEnter.setText(ENTER_BTN_LABEL);				getRootPane().setDefaultButton(ivjbtnEnter);				// user code begin {1}				// user code end 			}			catch (Throwable aeIVJEx)			{				// user code begin {2}				// user code end				handleException(aeIVJEx);			}		}		return ivjbtnEnter;	}		/**	 * This method initializes ivjbtnReset		 * 		 * @return RTSButton	 *//* &FrmRightsofSurvivorshipTTL010.getbtnReset& */	private RTSButton getbtnReset()	{		if (ivjbtnReset == null)		{			try			{				ivjbtnReset = new RTSButton();				ivjbtnReset.setBounds(new Rectangle(232, 186, 75, 26));				ivjbtnReset.setMnemonic(KeyEvent.VK_R);				ivjbtnReset.setText(RESET_BTN_LABEL);				ivjbtnReset.addActionListener(this);				// user code begin {1}				// user code end 			}			catch (Throwable aeIVJEx)			{				// user code begin {2}				// user code end				handleException(aeIVJEx);			}		}		return ivjbtnReset;	}	/**	 * This method initializes ivjchkAddlSurvivorsExist	 * 	 * @return JCheckBox	 *//* &FrmRightsofSurvivorshipTTL010.getchkAddlSurvivorsExist& */	private JCheckBox getchkAddlSurvivorsExist()	{		if (ivjchkAddlSurvivorsExist == null)		{			try			{				ivjchkAddlSurvivorsExist = new JCheckBox();				ivjchkAddlSurvivorsExist.setBounds(new Rectangle(165, 141, 136, 25));				ivjchkAddlSurvivorsExist.setMnemonic(KeyEvent.VK_M);				ivjchkAddlSurvivorsExist				.setText(MULTIPLE_CHKBX_LBL);				ivjchkAddlSurvivorsExist.addItemListener(this);				// user code begin {1}				// user code end 			}			catch (Throwable aeIVJEx)			{				// user code begin {2}				// user code end				handleException(aeIVJEx);			}		}		return ivjchkAddlSurvivorsExist;	}	/**	 * Return the FrmRightsofSurvivorshipTTL010ContentPane1 property value.	 * 	 * @return JPanel	 *//* &FrmRightsofSurvivorshipTTL010.getFrmRightsofSurvivorshipTTL010ContentPane1& */	private JPanel getFrmRightsofSurvivorshipTTL010ContentPane1()	{		if (ivjFrmRightsofSurvivorshipTTL010ContentPane1 == null)		{			try			{				ivjFrmRightsofSurvivorshipTTL010ContentPane1 = new JPanel();				ivjFrmRightsofSurvivorshipTTL010ContentPane1						.setName("FrmTransactionKeyVOI001ContentPane1");				ivjFrmRightsofSurvivorshipTTL010ContentPane1						.setLayout(null);				ivjFrmRightsofSurvivorshipTTL010ContentPane1						.setMaximumSize(new java.awt.Dimension(								2147483647, 2147483647));				ivjFrmRightsofSurvivorshipTTL010ContentPane1						.setMinimumSize(new java.awt.Dimension(425, 200));				getFrmRightsofSurvivorshipTTL010ContentPane1().add(						getstcLblName1(), getstcLblName1().getName());				getFrmRightsofSurvivorshipTTL010ContentPane1().add(						gettxtName1(), gettxtName1().getName());				ivjFrmRightsofSurvivorshipTTL010ContentPane1.add(						gettxtName2(), null);				ivjFrmRightsofSurvivorshipTTL010ContentPane1.add(						getstcLblName2(), null);				ivjFrmRightsofSurvivorshipTTL010ContentPane1.add(						getchkAddlSurvivorsExist(), null);				ivjFrmRightsofSurvivorshipTTL010ContentPane1.add(getstcLblOR(), null);				ivjFrmRightsofSurvivorshipTTL010ContentPane1.add(getbtnEnter(), null);				ivjFrmRightsofSurvivorshipTTL010ContentPane1.add(getbtnCancel(), null);				ivjFrmRightsofSurvivorshipTTL010ContentPane1.add(getbtnBypass(), null);				ivjFrmRightsofSurvivorshipTTL010ContentPane1.add(getbtnReset(), null);				// user code begin {1}				// user code end 			}			catch (Throwable aeIVJEx)			{				// user code begin {2}				// user code end				handleException(aeIVJEx);			}		}		return ivjFrmRightsofSurvivorshipTTL010ContentPane1;	}	/**	 * Return the ivjstcLblName1 property value.	 * 	 * @return JLabel	 *//* &FrmRightsofSurvivorshipTTL010.getstcLblName1& */	private JLabel getstcLblName1()	{		if (ivjstcLblName1 == null)		{			try			{				ivjstcLblName1 = new JLabel();				ivjstcLblName1.setSize(55, 20);				ivjstcLblName1.setName("stcLblName1");				ivjstcLblName1.setText(NAME1_LBL);				ivjstcLblName1.setLocation(new Point(48, 44));				ivjstcLblName1.setLabelFor(gettxtName1());				ivjstcLblName1.setMaximumSize(new java.awt.Dimension(						108, 14));				ivjstcLblName1.setMinimumSize(new java.awt.Dimension(						108, 14));				ivjstcLblName1.setDisplayedMnemonic(KeyEvent.VK_1);				ivjstcLblName1						.setHorizontalAlignment(SwingConstants.RIGHT);				// user code begin {1}				// user code end			}			catch (Throwable aeIVJEx)			{				// user code begin {2}				// user code end				handleException(aeIVJEx);			}		}		return ivjstcLblName1;	}	/**	 * Return the ivjstcLblName2 property value.	 * 	 * @return JLabel	 *//* &FrmRightsofSurvivorshipTTL010.getstcLblName2& */	private JLabel getstcLblName2()	{		if (ivjstcLblName2 == null)		{			try			{				ivjstcLblName2 = new JLabel();				ivjstcLblName2.setText(NAME2_LBL);				ivjstcLblName2.setLocation(new Point(50, 75));				ivjstcLblName2.setSize(new Dimension(53, 20));				ivjstcLblName2.setDisplayedMnemonic(KeyEvent.VK_2);				ivjstcLblName2						.setHorizontalAlignment(SwingConstants.RIGHT);				ivjstcLblName2.setLabelFor(gettxtName2());				// user code begin {1}				// user code end			}			catch (Throwable aeIVJEx)			{				// user code begin {2}				// user code end				handleException(aeIVJEx);			}		}		return ivjstcLblName2;	}		/**	 * Return the ivjstcLblOR property value.	 * 	 * @return JLabel	 *//* &FrmRightsofSurvivorshipTTL010.getstcLblOR& */	private JLabel getstcLblOR()	{		if (ivjstcLblOR == null)		{			try			{				ivjstcLblOR = new JLabel();				ivjstcLblOR.setHorizontalTextPosition(SwingConstants.CENTER);				ivjstcLblOR.setHorizontalAlignment(SwingConstants.CENTER);				ivjstcLblOR.setLocation(new Point(219, 115));				ivjstcLblOR.setSize(new Dimension(17, 16));				ivjstcLblOR.setText(OR_LBL);				// user code begin {1}				// user code end			}			catch (Throwable aeIVJEx)			{				// user code begin {2}				// user code end				handleException(aeIVJEx);			}		}		return ivjstcLblOR;	}	/**	 * Return the txtTransactionId property value.	 * 	 * @return RTSInputField	 *//* &FrmRightsofSurvivorshipTTL010.gettxtName1& */	private RTSInputField gettxtName1()	{		if (ivjtxtName1 == null)		{			try			{				ivjtxtName1 = new RTSInputField();				ivjtxtName1.setSize(269, 20);				ivjtxtName1.setName("ivjtxtName1");				ivjtxtName1.setInput(RTSInputField.DEFAULT);				ivjtxtName1.setLocation(new Point(114, 44));				ivjtxtName1.setMaxLength(CommonConstant.LENGTH_NAME);				ivjtxtName1.addActionListener(this);				// user code begin {1}				// user code end			}			catch (Throwable aeIVJEx)			{				// user code begin {2}				// user code end				handleException(aeIVJEx);			}		}		return ivjtxtName1;	}		/**	 * This method initializes ivjtxtName2	 * 	 * @return RTSInputField	 *//* &FrmRightsofSurvivorshipTTL010.gettxtName2& */	private RTSInputField gettxtName2()	{		if (ivjtxtName2 == null)		{			try			{				ivjtxtName2 = new RTSInputField();				ivjtxtName2.setMaxLength(CommonConstant.LENGTH_NAME);				ivjtxtName2.setInput(RTSInputField.DEFAULT); 				ivjtxtName2.setSize(new Dimension(269, 20));				ivjtxtName2.setLocation(new Point(114, 75));				ivjtxtName2.setName("ivjtxtName2");				// user code begin {1}				// user code end			}			catch (Throwable aeIVJEx)			{				// user code begin {2}				// user code end				handleException(aeIVJEx);			}		}		return ivjtxtName2;	} 	/**	 * Called whenever the part throws an exception.	 * 	 * @param aeException	 *//* &FrmRightsofSurvivorshipTTL010.handleException& */	private void handleException(Throwable aeException)	{		RTSException leRTSEx = new RTSException(				RTSException.JAVA_ERROR, (Exception) aeException);		leRTSEx.displayError(this);	}		/**	 * Initialize the class.	 *//* &FrmRightsofSurvivorshipTTL010.initialize& */	private void initialize()	{		try		{			setName("FrmRightsofSurvivorshipTTL010");			setDefaultCloseOperation(WindowConstants.DO_NOTHING_ON_CLOSE);			setSize(459, 263);			setTitle(TTL010_FRM_TITLE);			setContentPane(getFrmRightsofSurvivorshipTTL010ContentPane1());			// user code begin {1}			// user code end		}		catch (Throwable aeIVJEx)		{			handleException(aeIVJEx);		}		cvMFValid = new Vector();		cvMFValid.add(gettxtName1());		cvMFValid.add(gettxtName2());		// user code begin {2}		// user code end	}		/**	 * ItemListener method.	 * 	 * @param aaIE ItemEvent	 *//* &FrmRightsofSurvivorshipTTL010.itemStateChanged& */	public void itemStateChanged(ItemEvent aaIE)	{		if (aaIE.getSource() == getchkAddlSurvivorsExist())		{			clearAllColor(this); 						boolean lbAddlChkSelected = getchkAddlSurvivorsExist().isSelected();						if (lbAddlChkSelected)			{				gettxtName1().setText(new String());				gettxtName2().setText(new String());			}			else			{				gettxtName1().requestFocus();			}			gettxtName1().setEnabled(!lbAddlChkSelected);			gettxtName2().setEnabled(!lbAddlChkSelected);			getstcLblName1().setEnabled(!lbAddlChkSelected);			getstcLblName2().setEnabled(!lbAddlChkSelected);			getstcLblOR().setEnabled(!lbAddlChkSelected);			getbtnReset().setEnabled(lbAddlChkSelected);			getbtnEnter().setEnabled(lbAddlChkSelected);			getbtnBypass().setEnabled(!lbAddlChkSelected && cbByPassAppl); 		}	}		/**	 * Invoked when a key has been pressed.	 * 	 * @param aaKE KeyEvent	 *//* &FrmRightsofSurvivorshipTTL010.keyReleased& */	public void keyReleased(KeyEvent aaKE)	{		if (aaKE.getKeyChar() == KeyEvent.VK_ESCAPE)		{			saveScreenTTL010Data();			getController().processData(				AbstractViewController.CANCEL,				null);		}		else if (aaKE.getKeyChar() != KeyEvent.VK_ENTER)		{			setupScreenObjects();		}	}		/**	 * Handle Reset Request   	 *//* &FrmRightsofSurvivorshipTTL010.handleResetRequest& */	private void handleResetRequest()	{		gettxtName1().setText(new String()); 		gettxtName2().setText(new String());		getbtnReset().setEnabled(false);		getstcLblOR().setEnabled(true);		getchkAddlSurvivorsExist().setEnabled(true);		getchkAddlSurvivorsExist().setSelected(false);		getbtnBypass().setEnabled(cbByPassAppl);		getbtnEnter().setEnabled(false); 	}		/** 	 * Save Screen Data for later Display 	 *//* &FrmRightsofSurvivorshipTTL010.saveScreenTTL010Data& */	private void saveScreenTTL010Data()	{		ScreenTTL010SavedData laTTL010Data =			new ScreenTTL010SavedData();		laTTL010Data.setName1(gettxtName1().getText());		laTTL010Data.setName2(gettxtName2().getText());		laTTL010Data.setAddlSurvivors(getchkAddlSurvivorsExist().isSelected()); 		getController().getMediator().closeVault(			ScreenConstant.TTL010,			UtilityMethods.copy(laTTL010Data));	}		/**	 * all subclasses must implement this method - it sets the data on the	 * screen and is how the controller relays information to the view	 * 	 * @param aaData 	 *//* &FrmRightsofSurvivorshipTTL010.setData& */	public void setData(Object aaData)	{		try		{			caVehInqData = (VehicleInquiryData) aaData;			TitleData laTitleData = caVehInqData.getMfVehicleData().getTitleData();			String lsTransCd = getController().getTransCode();			boolean lbCorr = lsTransCd.equals(TransCdConstant.REJCOR) || 				laTitleData.getTtlTypeIndi() == TitleTypes.INT_CORRECTED ;						TitleValidObj laValidObj = (TitleValidObj) caVehInqData.getValidationObject();			TitleData laOrigTitleData = null;			if (laValidObj != null)			{				laOrigTitleData = ((MFVehicleData) laValidObj.getMfVehOrig()).getTitleData();			}						Object laTTL010 =				getController().getMediator().openVault(					ScreenConstant.TTL010);						if (laTTL010 != null					&& laTTL010 instanceof ScreenTTL010SavedData)			{				setSavedDataToDisplay((ScreenTTL010SavedData) laTTL010);			}			else if (lbCorr)				{					if (laTitleData.getAddlSurvivorIndi() ==1)					{						getchkAddlSurvivorsExist().setSelected(true); 					}					else					{						gettxtName1().setText(laTitleData.getSurvShpRightsName1());						gettxtName2().setText(laTitleData.getSurvShpRightsName2());					}				}						cbByPassAppl = 					(lbCorr  && laValidObj != null 							&& laOrigTitleData!= null && laOrigTitleData.getSurvshpRightsIndi() == 1							&& UtilityMethods.isEmpty(laOrigTitleData.getSurvShpRightsName1())							&& laOrigTitleData.getAddlSurvivorIndi() == 0)					|| (UtilityMethods.isDTA(lsTransCd) && 						caVehInqData.getRTSEffDt()< SystemProperty.getDTARejectSurvivorDate());			setupScreenObjects();						if (!getbtnEnter().isEnabled())			{				gettxtName1().requestFocus();			}		}		catch (NullPointerException aeNPEx)		{			RTSException leRTSEx = new RTSException(					RTSException.FAILURE_MESSAGE, aeNPEx);			leRTSEx.displayError(this);			leRTSEx = null;		}	}	/**	 * Set Data to Data Object 	 *  	 * @return VehicleInquiryData 	 *//* &FrmRightsofSurvivorshipTTL010.setDataToDataObject& */	private VehicleInquiryData setDataToDataObject()	{		VehicleInquiryData laVehInqData = (VehicleInquiryData) UtilityMethods.copy(caVehInqData); 		laVehInqData.getMfVehicleData().getTitleData()				.setSurvShpRightsName1(gettxtName1().getText());		laVehInqData.getMfVehicleData().getTitleData()				.setSurvShpRightsName2(gettxtName2().getText());		laVehInqData				.getMfVehicleData()				.getTitleData()				.setAddlSurvivorIndi(						getchkAddlSurvivorsExist().isSelected() ? 1 : 0);				return laVehInqData; 	}	/** 	 * Display data saved earlier 	 * 	 * @param aaTTL007Data	 *//* &FrmRightsofSurvivorshipTTL010.setSavedDataToDisplay& */	private void setSavedDataToDisplay(ScreenTTL010SavedData aaTTL010Data)	{		if (!aaTTL010Data.isEmpty())		{			gettxtName1().setText(aaTTL010Data.getName1());			gettxtName2().setText(aaTTL010Data.getName2());			getchkAddlSurvivorsExist().setSelected(aaTTL010Data.isAddlSurvivors());			getstcLblOR().setEnabled(false); 		}	}	/**	 * Enable/Disable: 	 * 	   Buttons:   Enter, Reset, Bypass	 *     Label:     OR	 *     Checkbox:  Multiple Survivors   	 *//* &FrmRightsofSurvivorshipTTL010.setupScreenObjects& */	private void setupScreenObjects()	{		boolean lbEmptyName = gettxtName1().isEmpty() && gettxtName2().isEmpty();		boolean lbAddlSurvivor = getchkAddlSurvivorsExist().isSelected(); 		boolean lbNoData = lbEmptyName & !lbAddlSurvivor; 		getchkAddlSurvivorsExist().setEnabled(lbEmptyName);		getstcLblOR().setEnabled(lbNoData);		getbtnBypass().setEnabled(lbNoData && cbByPassAppl);		getbtnReset().setEnabled(!lbNoData);		getbtnEnter().setEnabled(lbAddlSurvivor || !gettxtName1().isEmpty()); 	}	/**	 * Validate Data on Screen 	 * 	 * @return boolean 	 *//* &FrmRightsofSurvivorshipTTL010.validateData& */	private boolean validateData()	{		boolean lbReturn = true;		RTSException leRTSEx = new RTSException();		UtilityMethods.trimRTSInputField(this);		if (!getchkAddlSurvivorsExist().isSelected())		{			CommonValidations.addRTSExceptionForInvalidMFCharacters(					cvMFValid,					leRTSEx);		}		if (leRTSEx.isValidationError())		{			leRTSEx.displayError(this);			leRTSEx.getFirstComponent().requestFocus();			lbReturn = false;		}		return lbReturn;	}}/* #FrmRightsofSurvivorshipTTL010# */  //  @jve:decl-index=0:visual-constraint="58,11"