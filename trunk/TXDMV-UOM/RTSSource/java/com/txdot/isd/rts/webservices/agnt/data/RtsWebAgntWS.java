package com.txdot.isd.rts.webservices.agnt.data;import java.util.Calendar;import java.util.Date;import com.txdot.isd.rts.services.exception.RTSException;/* * RtsWebAgntWS.java * * (c) Texas Department of Motor Vehicles 2011 * --------------------------------------------------------------------- * Change History: * Name			Date		Description * ------------	-----------	-------------------------------------------- * Ray Rowehl	01/28/2011	Initial load. * 							defect 10670 Ver 6.7.0 * Ray Rowehl	02/02/2011	Add check DMV Indi. * 							defect 10670 Ver 6.7.0 * Ray Rowehl	02/03/2011	Fold in RtsWebAgnt definition. * 							It is not translating into web service  * 							definition from just extending for some  * 							reason. * 							defect 10670 Ver 6.7.0 * Ray Rowehl	04/28/2011	Rename setEmpPhone to setPhone. * 							add setPhone() * 							delete setEmpPhone() * 							defect 10718 Ver 6.7.1 * Ray Rowehl	06/15/2011	Add RtsWebAgntSecurityWS array. * 							add carrAgntSecurity, cbDataChanged * 							add getAgntSecurity(), setAgntSecurity(), * 								isDataChanged(), setDataChanged() * 							defect 10718 Ver 6.8.0 * Ray Rowehl	06/20/2011	Remove all the fields that went to  * 							RtsWebAgntSecurityWS. * 							defect 10718 Ver 6.8.0 * Ray Rowehl	06/20/2011	Bring back some of the critical getters for  * 							WebAgent login function. * 							defect 10718 Ver 6.8.0 * Ray Rowehl	06/30/2011	Add a creater for a WebAgentData object. * 							add getWebAgentData() * 							defect 10718 Ver 6.8.0 * K McKEE      09/01/2011  Added setUpdtngAgntIdntyNo * 							modify getWebAgentData() * 							defect 10729 Ver 6.8.1 * R Pilon		02/02/2012	Changed method setChngTimeStmpDate() to accept a * 							  Date object instead of a Calendar object to  * 							  prevent web service validation error. * 							delete setChngTimeStmpDate(Calendar aaChngTimeStmp) * 							add setChngTimeStmpDate(Date aaChngTimeStmpDate) * 							defect 11135 Ver 6.10.0 * --------------------------------------------------------------------- *//** * Combined Agent and Security View for web services. * * @version	6.10.0			02/02/2012 * @author	Ray Rowehl * <br>Creation Date:		01/28/2011 19:07:11 *//* &RtsWebAgntWS& */public class RtsWebAgntWS{/* &RtsWebAgntWS'caChngTimeStmp& */	private Calendar caChngTimeStmp;/* &RtsWebAgntWS'carrAgntSecurity& */	private RtsWebAgntSecurityWS[] carrAgntSecurity;/* &RtsWebAgntWS'cbCheckDMVIndi& */	private boolean cbCheckDMVIndi;/* &RtsWebAgntWS'cbDataChanged& */	private boolean cbDataChanged;/* &RtsWebAgntWS'cbDmvUserIndi& */	private boolean cbDmvUserIndi;/* &RtsWebAgntWS'ciAgntIdntyNo& */	private int ciAgntIdntyNo;/* &RtsWebAgntWS'ciInitOfcNo& */	private int ciInitOfcNo;/* &RtsWebAgntWS'csEMail& */	private String csEMail;/* &RtsWebAgntWS'csFstName& */	private String csFstName;/* &RtsWebAgntWS'csLstName& */	private String csLstName;/* &RtsWebAgntWS'csMiName& */	private String csMiName;/* &RtsWebAgntWS'csPhone& */	private String csPhone;/* &RtsWebAgntWS'csUserName& */	private String csUserName;/* &RtsWebAgntWS'ciUpdtngAgntIdntyNo& */	private int ciUpdtngAgntIdntyNo;	/**	 * Get the Agent Identity Number.	 * 	 * @return int	 *//* &RtsWebAgntWS.getAgntIdntyNo& */	public int getAgntIdntyNo()	{		return ciAgntIdntyNo;	}		/**	 * Return the Agent Security Identity Number.	 * 	 * @return int	 *//* &RtsWebAgntWS.getAgntSecrtyIdntyNo& */	public int getAgntSecrtyIdntyNo()	{		int liIdntyNo = 0;				if (getAgntSecurity() != null		&& getAgntSecurity().length > 0)		{			liIdntyNo = getAgntSecurity()[0].getAgntSecrtyIdntyNo();		}		return liIdntyNo;	}	/**	 * Get the Agent Security array.	 * 	 * @return RtsWebAgntSecurityWS[]	 *//* &RtsWebAgntWS.getAgntSecurity$3& */	public RtsWebAgntSecurityWS[] getAgntSecurity()	{		return carrAgntSecurity;	}	/**	 * Get an element of Agent Security array.	 * 	 * @param i element of the carrAgntSecurity array to get	 * @return RtsWebAgntSecurityWS	 *//* &RtsWebAgntWS.getAgntSecurity$1& */	public RtsWebAgntSecurityWS getAgntSecurity(int i)	{		return carrAgntSecurity[i];	}	/**	 * Get the Last Change Time Stamp	 * 	 * @return Calendar	 *//* &RtsWebAgntWS.getChngTimeStmp& */	public Calendar getChngTimeStmp()	{		return caChngTimeStmp;	}		/**	 * Get the Last Change Date	 * 	 * @return Date	 *//* &RtsWebAgntWS.getChngTimeStmpDate& */	public Date getChngTimeStmpDate()	{		if (caChngTimeStmp != null)		{			return caChngTimeStmp.getTime();		}		else 		{			return Calendar.getInstance().getTime();		}	}		/**	 * Get the Agent's EMail Address.	 * 	 * @return String	 *//* &RtsWebAgntWS.getEMail& */	public String getEMail()	{		return csEMail;	}	/**	 * Get the Agent's First Name.	 *  	 * @return String	 *//* &RtsWebAgntWS.getFstName& */	public String getFstName()	{		return csFstName;	}	/**	 * Get the Agent's Initial Office Number	 * 	 * @return int	 *//* &RtsWebAgntWS.getInitOfcNo& */	public int getInitOfcNo()	{		return ciInitOfcNo;	}	/**	 * Get the Agent's Last Name	 * 	 * @return String	 *//* &RtsWebAgntWS.getLstName& */	public String getLstName()	{		return csLstName;	}	/**	 * Get the Agent's Middle Initial.	 * 	 * @return String	 *//* &RtsWebAgntWS.getMiName& */	public String getMiName()	{		return csMiName;	}	/**	 * Get the Agent's Phone Number.	 * 	 * @return String	 *//* &RtsWebAgntWS.getPhone& */	public String getPhone()	{		return csPhone;	}	/**	 * Get the Agent's User Name.	 * 	 * @return String	 *//* &RtsWebAgntWS.getUserName& */	public String getUserName()	{		return csUserName;	}		/**	 * Return Agency Auth Access for logged in Agent.	 * 	 * @return boolean	 *//* &RtsWebAgntWS.isAgncyAuthAccs& */	public boolean isAgncyAuthAccs()	{		boolean lbAccs = false;				if (getAgntSecurity() != null		&& getAgntSecurity().length > 0)		{			lbAccs = getAgntSecurity()[0].isAgncyAuthAccs();		}		return lbAccs;	}		/**	 * Return Agency Info Access for logged in Agent.	 * 	 * @return boolean	 *//* &RtsWebAgntWS.isAgncyInfoAccs& */	public boolean isAgncyInfoAccs()	{		boolean lbAccs = false;				if (getAgntSecurity() != null		&& getAgntSecurity().length > 0)		{			lbAccs = getAgntSecurity()[0].isAgncyInfoAccs();		}		return lbAccs;	}		/**	 * Return Agent Auth Access for logged in Agent.	 * 	 * @return boolean	 *//* &RtsWebAgntWS.isAgntAuthAccs& */	public boolean isAgntAuthAccs()	{		boolean lbAccs = false;				if (getAgntSecurity() != null		&& getAgntSecurity().length > 0)		{			lbAccs = getAgntSecurity()[0].isAgntAuthAccs();		}		return lbAccs;	}		/**	 * Return Approve Batch Access for logged in Agent.	 * 	 * @return boolean	 *//* &RtsWebAgntWS.isAprvBatchAccs& */	public boolean isAprvBatchAccs()	{		boolean lbAccs = false;				if (getAgntSecurity() != null		&& getAgntSecurity().length > 0)		{			lbAccs = getAgntSecurity()[0].isAprvBatchAccs();		}		return lbAccs;	}		/**	 * Return Batch Access for logged in Agent.	 * 	 * @return boolean	 *//* &RtsWebAgntWS.isBatchAccs& */	public boolean isBatchAccs()	{		boolean lbAccs = false;				if (getAgntSecurity() != null		&& getAgntSecurity().length > 0)		{			lbAccs = getAgntSecurity()[0].isBatchAccs();		}		return lbAccs;	}	/**	 * Get the Check DMV Indi	 * 	 * <p>This indicates if we should use the DMV User Indi 	 * in SQL.	 * 	 * @return boolean	 *//* &RtsWebAgntWS.isCheckDMVIndi& */	public boolean isCheckDMVIndi()	{		return cbCheckDMVIndi;	}	/**	 * Has the data changed?	 * 	 * @return boolean	 *//* &RtsWebAgntWS.isDataChanged& */	public boolean isDataChanged()	{		return cbDataChanged;	}		/**	 * Get DMV User Indi.	 * 	 * @return boolean	 *//* &RtsWebAgntWS.isDmvUserIndi& */	public boolean isDmvUserIndi()	{		return cbDmvUserIndi;	}	/**	 * Return Renewal Access for logged in Agent.	 * 	 * @return boolean	 *//* &RtsWebAgntWS.isRenwlAccs& */	public boolean isRenwlAccs()	{		boolean lbAccs = false;				if (getAgntSecurity() != null		&& getAgntSecurity().length > 0)		{			lbAccs = getAgntSecurity()[0].isRenwlAccs();		}		return lbAccs;	}	/**	 * Return RePrint Access for logged in Agent.	 * 	 * @return boolean	 *//* &RtsWebAgntWS.isRePrntAccs& */	public boolean isRePrntAccs()	{		boolean lbAccs = false;				if (getAgntSecurity() != null		&& getAgntSecurity().length > 0)		{			lbAccs = getAgntSecurity()[0].isRePrntAccs();		}		return lbAccs;	}		/**	 * Return Report Access for logged in Agent.	 * 	 * @return boolean	 *//* &RtsWebAgntWS.isRptAccs& */	public boolean isRptAccs()	{		boolean lbAccs = false;				if (getAgntSecurity() != null		&& getAgntSecurity().length > 0)		{			lbAccs = getAgntSecurity()[0].isRptAccs();		}		return lbAccs;	}		/**	 * Return Submit Batch Access for logged in Agent.	 * 	 * @return boolean	 *//* &RtsWebAgntWS.isSubmitBatchAccs& */	public boolean isSubmitBatchAccs()	{		boolean lbAccs = false;				if (getAgntSecurity() != null		&& getAgntSecurity().length > 0)		{			lbAccs = getAgntSecurity()[0].isSubmitBatchAccs();		}		return lbAccs;	}		/**	 * Return Void Access for logged in Agent.	 * 	 * @return boolean	 *//* &RtsWebAgntWS.isVoidAccs& */	public boolean isVoidAccs()	{		boolean lbAccs = false;				if (getAgntSecurity() != null		&& getAgntSecurity().length > 0)		{			lbAccs = getAgntSecurity()[0].isVoidAccs();		}		return lbAccs;	}		/**	 * Dummy setter for AgncyAuthAccs.	 *//* &RtsWebAgntWS.setAgncyAuthAccs& */	public void setAgncyAuthAccs(boolean abJunk)	{		// dummy setter.  no action	}		/**	 * Dummy setter for AgncyInfoAccs.	 *//* &RtsWebAgntWS.setAgncyInfoAccs& */	public void setAgncyInfoAccs(boolean abJunk)	{		// dummy setter.  no action	}		/**	 * Dummy setter for AgntAuthAccs.	 *//* &RtsWebAgntWS.setAgntAuthAccs& */	public void setAgntAuthAccs(boolean abJunk)	{		// dummy setter.  no action	}	/**	 * Set the Agent Identity Number.	 * 	 * @param aiAgntIdntyNo	 *//* &RtsWebAgntWS.setAgntIdntyNo& */	public void setAgntIdntyNo(int aiAgntIdntyNo)	{		ciAgntIdntyNo = aiAgntIdntyNo;	}		/**	 * Dummy set of Agent Security Identity Number.	 *//* &RtsWebAgntWS.setAgntSecrtyIdntyNo& */	public void setAgntSecrtyIdntyNo(int aiAgntSecrtyIdntyNo)	{		// Do not actually do anything!	}	/**	 * Set the Agent Security array.	 * 	 * @param aarrAgntSecurity	 *//* &RtsWebAgntWS.setAgntSecurity& */	public void setAgntSecurity(RtsWebAgntSecurityWS[] aarrAgntSecurity)	{		carrAgntSecurity = aarrAgntSecurity;	}		/**	 * Set an element of the Agent Security array.	 * 	 * @param i element of the carrAgntSecurity array to set	 * @param aaAgntSecurity the element to set in the carrAgntSecurity array	 *//* &RtsWebAgntWS.setAgntSecurity$1& */	public void setAgntSecurity(int i, RtsWebAgntSecurityWS aaAgntSecurity)	{		carrAgntSecurity[i] = aaAgntSecurity;	}		/**	 * Dummy setter for AprvBatchAccs.	 *//* &RtsWebAgntWS.setAprvBatchAccs& */	public void setAprvBatchAccs(boolean abJunk)	{		// dummy setter.  no action	}		/**	 * Dummy setter for BatchAccs.	 *//* &RtsWebAgntWS.setBatchAccs& */	public void setBatchAccs(boolean abJunk)	{		// dummy setter.  no action	}	/**	 * Set the Check DMV Indi	 * 	 * <p>This indicates if we should use the DMV User Indi 	 * in SQL.	 * 	 * @param abCheckDMVIndi	 *//* &RtsWebAgntWS.setCheckDMVIndi& */	public void setCheckDMVIndi(boolean abCheckDMVIndi)	{		cbCheckDMVIndi = abCheckDMVIndi;	}	/**	 * Set the TimeStamp of the last change.	 * 	 * @param aaChngTimeStmp	 *//* &RtsWebAgntWS.setChngTimeStmp& */	public void setChngTimeStmp(Calendar aaChngTimeStmp)	{		caChngTimeStmp = aaChngTimeStmp;	}		/**	 * Set the TimeStamp of the last change.	 * 	 * @param aaChngTimeStmpDate	 *//* &RtsWebAgntWS.setChngTimeStmpDate& */	public void setChngTimeStmpDate(Date aaChngTimeStmpDate)	{		if (aaChngTimeStmpDate != null)		{			caChngTimeStmp.setTime(aaChngTimeStmpDate);		}	}	/**	 * Set Data Changed indicator.	 * 	 * @param abDataChanged	 *//* &RtsWebAgntWS.setDataChanged& */	public void setDataChanged(boolean abDataChanged)	{		cbDataChanged = abDataChanged;	}	/**	 * Set DMV User Indi.	 * 	 * @param abDmvUserIndi	 *//* &RtsWebAgntWS.setDmvUserIndi& */	public void setDmvUserIndi(boolean abDmvUserIndi)	{		cbDmvUserIndi = abDmvUserIndi;	}	/**	 * Set the Agent's EMail Address.	 * 	 * @param asEMail	 *//* &RtsWebAgntWS.setEMail& */	public void setEMail(String asEMail)	{		csEMail = asEMail;	}	/**	 * Set the Agent's First Name.	 * 	 * @param asFstName	 *//* &RtsWebAgntWS.setFstName& */	public void setFstName(String asFstName)	{		csFstName = asFstName;	}	/**	 * Set the Agent's Initial Office.	 * 	 * @param aiInitOfcNo	 *//* &RtsWebAgntWS.setInitOfcNo& */	public void setInitOfcNo(int aiInitOfcNo)	{		ciInitOfcNo = aiInitOfcNo;	}	/**	 * Set the Agent's Last Name.	 * 	 * @param asLstName	 *//* &RtsWebAgntWS.setLstName& */	public void setLstName(String asLstName)	{		csLstName = asLstName;	}	/**	 * Set the Agent's Middle Initial.	 * 	 * @param asMiName	 *//* &RtsWebAgntWS.setMiName& */	public void setMiName(String asMiName)	{		csMiName = asMiName;	}	/**	 * Set the Agent's Phone Number.	 * 	 * @param asPhone	 *//* &RtsWebAgntWS.setPhone& */	public void setPhone(String asPhone)	{		csPhone = asPhone;	}		/**	 * Dummy setter for RenwlAccs.	 *//* &RtsWebAgntWS.setRenwlAccs& */	public void setRenwlAccs(boolean abJunk)	{		// dummy setter.  no action	}		/**	 * Dummy setter for RePrntAccs.	 *//* &RtsWebAgntWS.setRePrntAccs& */	public void setRePrntAccs(boolean abJunk)	{		// dummy setter.  no action	}		/**	 * Dummy setter for RptAccs.	 *//* &RtsWebAgntWS.setRptAccs& */	public void setRptAccs(boolean abJunk)	{		// dummy setter.  no action	}		/**	 * Dummy setter for SubmitBatchAccs.	 *//* &RtsWebAgntWS.setSubmitBatchAccs& */	public void setSubmitBatchAccs(boolean abJunk)	{		// dummy setter.  no action	}	/**	 * Set the Agent's UserName.	 * 	 * @param asUserName	 *//* &RtsWebAgntWS.setUserName& */	public void setUserName(String asUserName)	{		csUserName = asUserName;	}		/**	 * Dummy setter for VoidAccs.	 *//* &RtsWebAgntWS.setVoidAccs& */	public void setVoidAccs(boolean abJunk)	{		// dummy setter.  no action	}	/**	 * Get the updating agent identity no	 * @return the ciUpdtngAgntIdntyNo	 *//* &RtsWebAgntWS.getUpdtngAgntIdntyNo& */	public int getUpdtngAgntIdntyNo()	{		return ciUpdtngAgntIdntyNo;	}	/**	 * Set the agent identity no of the updating agent.	 * @param ciUpdtngAgntIdntyNo the ciUpdtngAgntIdntyNo to set	 *//* &RtsWebAgntWS.setUpdtngAgntIdntyNo& */	public void setUpdtngAgntIdntyNo(int aiUpdtngAgntIdntyNo)	{		ciUpdtngAgntIdntyNo = aiUpdtngAgntIdntyNo;	}	/**	 * Make sure the meets at least basic edit checks.	 * 	 * @throws RTSException	 *//* &RtsWebAgntWS.validateWebAgntWS& */	public void validateWebAgntWS() throws RTSException	{		RTSException leRTSEx = null;				// if there is an exception, throw it.		if (leRTSEx != null)		{			throw leRTSEx;		}	}}/* #RtsWebAgntWS# */