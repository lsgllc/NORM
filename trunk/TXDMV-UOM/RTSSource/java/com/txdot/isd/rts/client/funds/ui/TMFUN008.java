package com.txdot.isd.rts.client.funds.ui;import java.util.Vector;import com.txdot.isd.rts.services.data.CashWorkstationIdsData;import com.txdot.isd.rts.services.util.constants.CommonConstant;import com.txdot.isd.rts.services.util.constants.FundsConstant;/* * * TMFUN008.java * * (c) Texas Department of Transportation 2001 * --------------------------------------------------------------------- * Change History: * Name			Date		Description * ------------	-----------	-------------------------------------------- * K Harrell	06/19/2005	Reorganize imports to address movement  * 							of services.cache.*Data to services.data  * 							defect 7884  Ver 5.2.3     * B Hargrove	09/30/2005	Modify code for move to Java 1.4. *							Bring code to standards. * 							defect 7886 Ver 5.2.3  * K Harrell	06/08/2009	Implement FundsConstant * 							modify getValueAt() * 							defect 9943 Ver Defect_POS_F  * --------------------------------------------------------------------- *//** * Table model for screen FUN008.  Sets the column count and names * as well as inserting rows into the table and other table functions. * * @version	Defect_POS_F 	06/08/2009 * @author	Bobby Tulsiani * <br>Creation Date:		09/05/2001 13:30:59 *//* &TMFUN008& */public class TMFUN008 extends javax.swing.table.AbstractTableModel{/* &TMFUN008'cvVector& */	private Vector cvVector;/* &TMFUN008'carrColumn_Name& */	private final static String[] carrColumn_Name =		{ "Cash Drawer", "Requested Workstation" };	/**	 * TMFUN008 constructor comment.	 *//* &TMFUN008.TMFUN008& */	public TMFUN008()	{		super();		cvVector = new Vector();	}	/**	 * Add a vector to the table to post rows.	 * 	 * @param avVector Vector	 *//* &TMFUN008.add& */	public void add(Vector avVector)	{		cvVector = new Vector(avVector);		fireTableDataChanged();	}	/**	 * Specify the number of columns in table.	 * 	 * @return int	 *//* &TMFUN008.getColumnCount& */	public int getColumnCount()	{		return carrColumn_Name.length;	}	/**	 * Specify the names of each column in the table.	 * 	 * @param aiCol int	 * @return String	 *//* &TMFUN008.getColumnName& */	public String getColumnName(int aiCol)	{		if (aiCol >= 0 && aiCol < carrColumn_Name.length)		{			return carrColumn_Name[aiCol];		}		else		{			return CommonConstant.STR_SPACE_EMPTY;		}	}	/**	 * Return the number of rows in the table	 * 	 * @return int	 *//* &TMFUN008.getRowCount& */	public int getRowCount()	{		return cvVector.size();	}	/**	 * Return values from the table	 * 	 * @param aiRow int	 * @param aiCol int	 * @return Object	 *//* &TMFUN008.getValueAt& */	public Object getValueAt(int aiRow, int aiCol)	{		// defect 9943 		if (aiCol == FundsConstant.FUN008_CASH_DRAWER)			//if (aiCol == 0)		{			return new Integer(				((CashWorkstationIdsData) cvVector.get(aiRow))					.getCashWsId());		}		else if (aiCol == FundsConstant.FUN008_REQUESTED_WORKSTATION)			//else if (aiCol == 1)		{			int liReqWsId =				((CashWorkstationIdsData) cvVector.get(aiRow))					.getCloseOutReqWsId();			//If liReqWsId = MIN AbstractValue return a blank string,			//so table will have a blank space			if (liReqWsId != Integer.MIN_VALUE)			{				return new Integer(liReqWsId);			}			else			{				return CommonConstant.STR_SPACE_EMPTY;			}		}		// end defect 9943 		return CommonConstant.STR_SPACE_EMPTY;	}}/* #TMFUN008# */